namespace NQuery.Tests.Binding
{
    partial class IntrinsicOperatorTests
    {
        private sealed class BinaryOperatorTestCase
        {
            public BinaryOperatorTestCase(string op, string left, string right, string expectedResult)
            {
                Op = op;
                Left = left;
                Right = right;
                ExpectedResult = expectedResult;
            }

            public string Op { get; }

            public string Left { get; }

            public string Right { get; }

            public string ExpectedResult { get; }
        }

        private static readonly BinaryOperatorTestCase[] BinaryTestCases =
        {
            new BinaryOperatorTestCase("*", "sbyte", "sbyte", "int"),
            new BinaryOperatorTestCase("*", "sbyte", "byte", "int"),
            new BinaryOperatorTestCase("*", "sbyte", "short", "int"),
            new BinaryOperatorTestCase("*", "sbyte", "ushort", "int"),
            new BinaryOperatorTestCase("*", "sbyte", "int", "int"),
            new BinaryOperatorTestCase("*", "sbyte", "uint", "long"),
            new BinaryOperatorTestCase("*", "sbyte", "long", "long"),
            new BinaryOperatorTestCase("*", "sbyte", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("*", "sbyte", "char", "int"),
            new BinaryOperatorTestCase("*", "sbyte", "float", "float"),
            new BinaryOperatorTestCase("*", "sbyte", "double", "double"),
            new BinaryOperatorTestCase("*", "sbyte", "decimal", "decimal"),
            new BinaryOperatorTestCase("*", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "byte", "sbyte", "int"),
            new BinaryOperatorTestCase("*", "byte", "byte", "int"),
            new BinaryOperatorTestCase("*", "byte", "short", "int"),
            new BinaryOperatorTestCase("*", "byte", "ushort", "int"),
            new BinaryOperatorTestCase("*", "byte", "int", "int"),
            new BinaryOperatorTestCase("*", "byte", "uint", "uint"),
            new BinaryOperatorTestCase("*", "byte", "long", "long"),
            new BinaryOperatorTestCase("*", "byte", "ulong", "ulong"),
            new BinaryOperatorTestCase("*", "byte", "char", "int"),
            new BinaryOperatorTestCase("*", "byte", "float", "float"),
            new BinaryOperatorTestCase("*", "byte", "double", "double"),
            new BinaryOperatorTestCase("*", "byte", "decimal", "decimal"),
            new BinaryOperatorTestCase("*", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "short", "sbyte", "int"),
            new BinaryOperatorTestCase("*", "short", "byte", "int"),
            new BinaryOperatorTestCase("*", "short", "short", "int"),
            new BinaryOperatorTestCase("*", "short", "ushort", "int"),
            new BinaryOperatorTestCase("*", "short", "int", "int"),
            new BinaryOperatorTestCase("*", "short", "uint", "long"),
            new BinaryOperatorTestCase("*", "short", "long", "long"),
            new BinaryOperatorTestCase("*", "short", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("*", "short", "char", "int"),
            new BinaryOperatorTestCase("*", "short", "float", "float"),
            new BinaryOperatorTestCase("*", "short", "double", "double"),
            new BinaryOperatorTestCase("*", "short", "decimal", "decimal"),
            new BinaryOperatorTestCase("*", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "ushort", "sbyte", "int"),
            new BinaryOperatorTestCase("*", "ushort", "byte", "int"),
            new BinaryOperatorTestCase("*", "ushort", "short", "int"),
            new BinaryOperatorTestCase("*", "ushort", "ushort", "int"),
            new BinaryOperatorTestCase("*", "ushort", "int", "int"),
            new BinaryOperatorTestCase("*", "ushort", "uint", "uint"),
            new BinaryOperatorTestCase("*", "ushort", "long", "long"),
            new BinaryOperatorTestCase("*", "ushort", "ulong", "ulong"),
            new BinaryOperatorTestCase("*", "ushort", "char", "int"),
            new BinaryOperatorTestCase("*", "ushort", "float", "float"),
            new BinaryOperatorTestCase("*", "ushort", "double", "double"),
            new BinaryOperatorTestCase("*", "ushort", "decimal", "decimal"),
            new BinaryOperatorTestCase("*", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "int", "sbyte", "int"),
            new BinaryOperatorTestCase("*", "int", "byte", "int"),
            new BinaryOperatorTestCase("*", "int", "short", "int"),
            new BinaryOperatorTestCase("*", "int", "ushort", "int"),
            new BinaryOperatorTestCase("*", "int", "int", "int"),
            new BinaryOperatorTestCase("*", "int", "uint", "long"),
            new BinaryOperatorTestCase("*", "int", "long", "long"),
            new BinaryOperatorTestCase("*", "int", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("*", "int", "char", "int"),
            new BinaryOperatorTestCase("*", "int", "float", "float"),
            new BinaryOperatorTestCase("*", "int", "double", "double"),
            new BinaryOperatorTestCase("*", "int", "decimal", "decimal"),
            new BinaryOperatorTestCase("*", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "uint", "sbyte", "long"),
            new BinaryOperatorTestCase("*", "uint", "byte", "uint"),
            new BinaryOperatorTestCase("*", "uint", "short", "long"),
            new BinaryOperatorTestCase("*", "uint", "ushort", "uint"),
            new BinaryOperatorTestCase("*", "uint", "int", "long"),
            new BinaryOperatorTestCase("*", "uint", "uint", "uint"),
            new BinaryOperatorTestCase("*", "uint", "long", "long"),
            new BinaryOperatorTestCase("*", "uint", "ulong", "ulong"),
            new BinaryOperatorTestCase("*", "uint", "char", "uint"),
            new BinaryOperatorTestCase("*", "uint", "float", "float"),
            new BinaryOperatorTestCase("*", "uint", "double", "double"),
            new BinaryOperatorTestCase("*", "uint", "decimal", "decimal"),
            new BinaryOperatorTestCase("*", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "long", "sbyte", "long"),
            new BinaryOperatorTestCase("*", "long", "byte", "long"),
            new BinaryOperatorTestCase("*", "long", "short", "long"),
            new BinaryOperatorTestCase("*", "long", "ushort", "long"),
            new BinaryOperatorTestCase("*", "long", "int", "long"),
            new BinaryOperatorTestCase("*", "long", "uint", "long"),
            new BinaryOperatorTestCase("*", "long", "long", "long"),
            new BinaryOperatorTestCase("*", "long", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("*", "long", "char", "long"),
            new BinaryOperatorTestCase("*", "long", "float", "float"),
            new BinaryOperatorTestCase("*", "long", "double", "double"),
            new BinaryOperatorTestCase("*", "long", "decimal", "decimal"),
            new BinaryOperatorTestCase("*", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "ulong", "sbyte", "#ambiguous"),
            new BinaryOperatorTestCase("*", "ulong", "byte", "ulong"),
            new BinaryOperatorTestCase("*", "ulong", "short", "#ambiguous"),
            new BinaryOperatorTestCase("*", "ulong", "ushort", "ulong"),
            new BinaryOperatorTestCase("*", "ulong", "int", "#ambiguous"),
            new BinaryOperatorTestCase("*", "ulong", "uint", "ulong"),
            new BinaryOperatorTestCase("*", "ulong", "long", "#ambiguous"),
            new BinaryOperatorTestCase("*", "ulong", "ulong", "ulong"),
            new BinaryOperatorTestCase("*", "ulong", "char", "ulong"),
            new BinaryOperatorTestCase("*", "ulong", "float", "float"),
            new BinaryOperatorTestCase("*", "ulong", "double", "double"),
            new BinaryOperatorTestCase("*", "ulong", "decimal", "decimal"),
            new BinaryOperatorTestCase("*", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "char", "sbyte", "int"),
            new BinaryOperatorTestCase("*", "char", "byte", "int"),
            new BinaryOperatorTestCase("*", "char", "short", "int"),
            new BinaryOperatorTestCase("*", "char", "ushort", "int"),
            new BinaryOperatorTestCase("*", "char", "int", "int"),
            new BinaryOperatorTestCase("*", "char", "uint", "uint"),
            new BinaryOperatorTestCase("*", "char", "long", "long"),
            new BinaryOperatorTestCase("*", "char", "ulong", "ulong"),
            new BinaryOperatorTestCase("*", "char", "char", "int"),
            new BinaryOperatorTestCase("*", "char", "float", "float"),
            new BinaryOperatorTestCase("*", "char", "double", "double"),
            new BinaryOperatorTestCase("*", "char", "decimal", "decimal"),
            new BinaryOperatorTestCase("*", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "float", "sbyte", "float"),
            new BinaryOperatorTestCase("*", "float", "byte", "float"),
            new BinaryOperatorTestCase("*", "float", "short", "float"),
            new BinaryOperatorTestCase("*", "float", "ushort", "float"),
            new BinaryOperatorTestCase("*", "float", "int", "float"),
            new BinaryOperatorTestCase("*", "float", "uint", "float"),
            new BinaryOperatorTestCase("*", "float", "long", "float"),
            new BinaryOperatorTestCase("*", "float", "ulong", "float"),
            new BinaryOperatorTestCase("*", "float", "char", "float"),
            new BinaryOperatorTestCase("*", "float", "float", "float"),
            new BinaryOperatorTestCase("*", "float", "double", "double"),
            new BinaryOperatorTestCase("*", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("*", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "double", "sbyte", "double"),
            new BinaryOperatorTestCase("*", "double", "byte", "double"),
            new BinaryOperatorTestCase("*", "double", "short", "double"),
            new BinaryOperatorTestCase("*", "double", "ushort", "double"),
            new BinaryOperatorTestCase("*", "double", "int", "double"),
            new BinaryOperatorTestCase("*", "double", "uint", "double"),
            new BinaryOperatorTestCase("*", "double", "long", "double"),
            new BinaryOperatorTestCase("*", "double", "ulong", "double"),
            new BinaryOperatorTestCase("*", "double", "char", "double"),
            new BinaryOperatorTestCase("*", "double", "float", "double"),
            new BinaryOperatorTestCase("*", "double", "double", "double"),
            new BinaryOperatorTestCase("*", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("*", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "decimal", "sbyte", "decimal"),
            new BinaryOperatorTestCase("*", "decimal", "byte", "decimal"),
            new BinaryOperatorTestCase("*", "decimal", "short", "decimal"),
            new BinaryOperatorTestCase("*", "decimal", "ushort", "decimal"),
            new BinaryOperatorTestCase("*", "decimal", "int", "decimal"),
            new BinaryOperatorTestCase("*", "decimal", "uint", "decimal"),
            new BinaryOperatorTestCase("*", "decimal", "long", "decimal"),
            new BinaryOperatorTestCase("*", "decimal", "ulong", "decimal"),
            new BinaryOperatorTestCase("*", "decimal", "char", "decimal"),
            new BinaryOperatorTestCase("*", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("*", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("*", "decimal", "decimal", "decimal"),
            new BinaryOperatorTestCase("*", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("*", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "sbyte", "sbyte", "int"),
            new BinaryOperatorTestCase("/", "sbyte", "byte", "int"),
            new BinaryOperatorTestCase("/", "sbyte", "short", "int"),
            new BinaryOperatorTestCase("/", "sbyte", "ushort", "int"),
            new BinaryOperatorTestCase("/", "sbyte", "int", "int"),
            new BinaryOperatorTestCase("/", "sbyte", "uint", "long"),
            new BinaryOperatorTestCase("/", "sbyte", "long", "long"),
            new BinaryOperatorTestCase("/", "sbyte", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("/", "sbyte", "char", "int"),
            new BinaryOperatorTestCase("/", "sbyte", "float", "float"),
            new BinaryOperatorTestCase("/", "sbyte", "double", "double"),
            new BinaryOperatorTestCase("/", "sbyte", "decimal", "decimal"),
            new BinaryOperatorTestCase("/", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "byte", "sbyte", "int"),
            new BinaryOperatorTestCase("/", "byte", "byte", "int"),
            new BinaryOperatorTestCase("/", "byte", "short", "int"),
            new BinaryOperatorTestCase("/", "byte", "ushort", "int"),
            new BinaryOperatorTestCase("/", "byte", "int", "int"),
            new BinaryOperatorTestCase("/", "byte", "uint", "uint"),
            new BinaryOperatorTestCase("/", "byte", "long", "long"),
            new BinaryOperatorTestCase("/", "byte", "ulong", "ulong"),
            new BinaryOperatorTestCase("/", "byte", "char", "int"),
            new BinaryOperatorTestCase("/", "byte", "float", "float"),
            new BinaryOperatorTestCase("/", "byte", "double", "double"),
            new BinaryOperatorTestCase("/", "byte", "decimal", "decimal"),
            new BinaryOperatorTestCase("/", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "short", "sbyte", "int"),
            new BinaryOperatorTestCase("/", "short", "byte", "int"),
            new BinaryOperatorTestCase("/", "short", "short", "int"),
            new BinaryOperatorTestCase("/", "short", "ushort", "int"),
            new BinaryOperatorTestCase("/", "short", "int", "int"),
            new BinaryOperatorTestCase("/", "short", "uint", "long"),
            new BinaryOperatorTestCase("/", "short", "long", "long"),
            new BinaryOperatorTestCase("/", "short", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("/", "short", "char", "int"),
            new BinaryOperatorTestCase("/", "short", "float", "float"),
            new BinaryOperatorTestCase("/", "short", "double", "double"),
            new BinaryOperatorTestCase("/", "short", "decimal", "decimal"),
            new BinaryOperatorTestCase("/", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "ushort", "sbyte", "int"),
            new BinaryOperatorTestCase("/", "ushort", "byte", "int"),
            new BinaryOperatorTestCase("/", "ushort", "short", "int"),
            new BinaryOperatorTestCase("/", "ushort", "ushort", "int"),
            new BinaryOperatorTestCase("/", "ushort", "int", "int"),
            new BinaryOperatorTestCase("/", "ushort", "uint", "uint"),
            new BinaryOperatorTestCase("/", "ushort", "long", "long"),
            new BinaryOperatorTestCase("/", "ushort", "ulong", "ulong"),
            new BinaryOperatorTestCase("/", "ushort", "char", "int"),
            new BinaryOperatorTestCase("/", "ushort", "float", "float"),
            new BinaryOperatorTestCase("/", "ushort", "double", "double"),
            new BinaryOperatorTestCase("/", "ushort", "decimal", "decimal"),
            new BinaryOperatorTestCase("/", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "int", "sbyte", "int"),
            new BinaryOperatorTestCase("/", "int", "byte", "int"),
            new BinaryOperatorTestCase("/", "int", "short", "int"),
            new BinaryOperatorTestCase("/", "int", "ushort", "int"),
            new BinaryOperatorTestCase("/", "int", "int", "int"),
            new BinaryOperatorTestCase("/", "int", "uint", "long"),
            new BinaryOperatorTestCase("/", "int", "long", "long"),
            new BinaryOperatorTestCase("/", "int", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("/", "int", "char", "int"),
            new BinaryOperatorTestCase("/", "int", "float", "float"),
            new BinaryOperatorTestCase("/", "int", "double", "double"),
            new BinaryOperatorTestCase("/", "int", "decimal", "decimal"),
            new BinaryOperatorTestCase("/", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "uint", "sbyte", "long"),
            new BinaryOperatorTestCase("/", "uint", "byte", "uint"),
            new BinaryOperatorTestCase("/", "uint", "short", "long"),
            new BinaryOperatorTestCase("/", "uint", "ushort", "uint"),
            new BinaryOperatorTestCase("/", "uint", "int", "long"),
            new BinaryOperatorTestCase("/", "uint", "uint", "uint"),
            new BinaryOperatorTestCase("/", "uint", "long", "long"),
            new BinaryOperatorTestCase("/", "uint", "ulong", "ulong"),
            new BinaryOperatorTestCase("/", "uint", "char", "uint"),
            new BinaryOperatorTestCase("/", "uint", "float", "float"),
            new BinaryOperatorTestCase("/", "uint", "double", "double"),
            new BinaryOperatorTestCase("/", "uint", "decimal", "decimal"),
            new BinaryOperatorTestCase("/", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "long", "sbyte", "long"),
            new BinaryOperatorTestCase("/", "long", "byte", "long"),
            new BinaryOperatorTestCase("/", "long", "short", "long"),
            new BinaryOperatorTestCase("/", "long", "ushort", "long"),
            new BinaryOperatorTestCase("/", "long", "int", "long"),
            new BinaryOperatorTestCase("/", "long", "uint", "long"),
            new BinaryOperatorTestCase("/", "long", "long", "long"),
            new BinaryOperatorTestCase("/", "long", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("/", "long", "char", "long"),
            new BinaryOperatorTestCase("/", "long", "float", "float"),
            new BinaryOperatorTestCase("/", "long", "double", "double"),
            new BinaryOperatorTestCase("/", "long", "decimal", "decimal"),
            new BinaryOperatorTestCase("/", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "ulong", "sbyte", "#ambiguous"),
            new BinaryOperatorTestCase("/", "ulong", "byte", "ulong"),
            new BinaryOperatorTestCase("/", "ulong", "short", "#ambiguous"),
            new BinaryOperatorTestCase("/", "ulong", "ushort", "ulong"),
            new BinaryOperatorTestCase("/", "ulong", "int", "#ambiguous"),
            new BinaryOperatorTestCase("/", "ulong", "uint", "ulong"),
            new BinaryOperatorTestCase("/", "ulong", "long", "#ambiguous"),
            new BinaryOperatorTestCase("/", "ulong", "ulong", "ulong"),
            new BinaryOperatorTestCase("/", "ulong", "char", "ulong"),
            new BinaryOperatorTestCase("/", "ulong", "float", "float"),
            new BinaryOperatorTestCase("/", "ulong", "double", "double"),
            new BinaryOperatorTestCase("/", "ulong", "decimal", "decimal"),
            new BinaryOperatorTestCase("/", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "char", "sbyte", "int"),
            new BinaryOperatorTestCase("/", "char", "byte", "int"),
            new BinaryOperatorTestCase("/", "char", "short", "int"),
            new BinaryOperatorTestCase("/", "char", "ushort", "int"),
            new BinaryOperatorTestCase("/", "char", "int", "int"),
            new BinaryOperatorTestCase("/", "char", "uint", "uint"),
            new BinaryOperatorTestCase("/", "char", "long", "long"),
            new BinaryOperatorTestCase("/", "char", "ulong", "ulong"),
            new BinaryOperatorTestCase("/", "char", "char", "int"),
            new BinaryOperatorTestCase("/", "char", "float", "float"),
            new BinaryOperatorTestCase("/", "char", "double", "double"),
            new BinaryOperatorTestCase("/", "char", "decimal", "decimal"),
            new BinaryOperatorTestCase("/", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "float", "sbyte", "float"),
            new BinaryOperatorTestCase("/", "float", "byte", "float"),
            new BinaryOperatorTestCase("/", "float", "short", "float"),
            new BinaryOperatorTestCase("/", "float", "ushort", "float"),
            new BinaryOperatorTestCase("/", "float", "int", "float"),
            new BinaryOperatorTestCase("/", "float", "uint", "float"),
            new BinaryOperatorTestCase("/", "float", "long", "float"),
            new BinaryOperatorTestCase("/", "float", "ulong", "float"),
            new BinaryOperatorTestCase("/", "float", "char", "float"),
            new BinaryOperatorTestCase("/", "float", "float", "float"),
            new BinaryOperatorTestCase("/", "float", "double", "double"),
            new BinaryOperatorTestCase("/", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("/", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "double", "sbyte", "double"),
            new BinaryOperatorTestCase("/", "double", "byte", "double"),
            new BinaryOperatorTestCase("/", "double", "short", "double"),
            new BinaryOperatorTestCase("/", "double", "ushort", "double"),
            new BinaryOperatorTestCase("/", "double", "int", "double"),
            new BinaryOperatorTestCase("/", "double", "uint", "double"),
            new BinaryOperatorTestCase("/", "double", "long", "double"),
            new BinaryOperatorTestCase("/", "double", "ulong", "double"),
            new BinaryOperatorTestCase("/", "double", "char", "double"),
            new BinaryOperatorTestCase("/", "double", "float", "double"),
            new BinaryOperatorTestCase("/", "double", "double", "double"),
            new BinaryOperatorTestCase("/", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("/", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "decimal", "sbyte", "decimal"),
            new BinaryOperatorTestCase("/", "decimal", "byte", "decimal"),
            new BinaryOperatorTestCase("/", "decimal", "short", "decimal"),
            new BinaryOperatorTestCase("/", "decimal", "ushort", "decimal"),
            new BinaryOperatorTestCase("/", "decimal", "int", "decimal"),
            new BinaryOperatorTestCase("/", "decimal", "uint", "decimal"),
            new BinaryOperatorTestCase("/", "decimal", "long", "decimal"),
            new BinaryOperatorTestCase("/", "decimal", "ulong", "decimal"),
            new BinaryOperatorTestCase("/", "decimal", "char", "decimal"),
            new BinaryOperatorTestCase("/", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("/", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("/", "decimal", "decimal", "decimal"),
            new BinaryOperatorTestCase("/", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("/", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "sbyte", "sbyte", "int"),
            new BinaryOperatorTestCase("%", "sbyte", "byte", "int"),
            new BinaryOperatorTestCase("%", "sbyte", "short", "int"),
            new BinaryOperatorTestCase("%", "sbyte", "ushort", "int"),
            new BinaryOperatorTestCase("%", "sbyte", "int", "int"),
            new BinaryOperatorTestCase("%", "sbyte", "uint", "long"),
            new BinaryOperatorTestCase("%", "sbyte", "long", "long"),
            new BinaryOperatorTestCase("%", "sbyte", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("%", "sbyte", "char", "int"),
            new BinaryOperatorTestCase("%", "sbyte", "float", "float"),
            new BinaryOperatorTestCase("%", "sbyte", "double", "double"),
            new BinaryOperatorTestCase("%", "sbyte", "decimal", "decimal"),
            new BinaryOperatorTestCase("%", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "byte", "sbyte", "int"),
            new BinaryOperatorTestCase("%", "byte", "byte", "int"),
            new BinaryOperatorTestCase("%", "byte", "short", "int"),
            new BinaryOperatorTestCase("%", "byte", "ushort", "int"),
            new BinaryOperatorTestCase("%", "byte", "int", "int"),
            new BinaryOperatorTestCase("%", "byte", "uint", "uint"),
            new BinaryOperatorTestCase("%", "byte", "long", "long"),
            new BinaryOperatorTestCase("%", "byte", "ulong", "ulong"),
            new BinaryOperatorTestCase("%", "byte", "char", "int"),
            new BinaryOperatorTestCase("%", "byte", "float", "float"),
            new BinaryOperatorTestCase("%", "byte", "double", "double"),
            new BinaryOperatorTestCase("%", "byte", "decimal", "decimal"),
            new BinaryOperatorTestCase("%", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "short", "sbyte", "int"),
            new BinaryOperatorTestCase("%", "short", "byte", "int"),
            new BinaryOperatorTestCase("%", "short", "short", "int"),
            new BinaryOperatorTestCase("%", "short", "ushort", "int"),
            new BinaryOperatorTestCase("%", "short", "int", "int"),
            new BinaryOperatorTestCase("%", "short", "uint", "long"),
            new BinaryOperatorTestCase("%", "short", "long", "long"),
            new BinaryOperatorTestCase("%", "short", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("%", "short", "char", "int"),
            new BinaryOperatorTestCase("%", "short", "float", "float"),
            new BinaryOperatorTestCase("%", "short", "double", "double"),
            new BinaryOperatorTestCase("%", "short", "decimal", "decimal"),
            new BinaryOperatorTestCase("%", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "ushort", "sbyte", "int"),
            new BinaryOperatorTestCase("%", "ushort", "byte", "int"),
            new BinaryOperatorTestCase("%", "ushort", "short", "int"),
            new BinaryOperatorTestCase("%", "ushort", "ushort", "int"),
            new BinaryOperatorTestCase("%", "ushort", "int", "int"),
            new BinaryOperatorTestCase("%", "ushort", "uint", "uint"),
            new BinaryOperatorTestCase("%", "ushort", "long", "long"),
            new BinaryOperatorTestCase("%", "ushort", "ulong", "ulong"),
            new BinaryOperatorTestCase("%", "ushort", "char", "int"),
            new BinaryOperatorTestCase("%", "ushort", "float", "float"),
            new BinaryOperatorTestCase("%", "ushort", "double", "double"),
            new BinaryOperatorTestCase("%", "ushort", "decimal", "decimal"),
            new BinaryOperatorTestCase("%", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "int", "sbyte", "int"),
            new BinaryOperatorTestCase("%", "int", "byte", "int"),
            new BinaryOperatorTestCase("%", "int", "short", "int"),
            new BinaryOperatorTestCase("%", "int", "ushort", "int"),
            new BinaryOperatorTestCase("%", "int", "int", "int"),
            new BinaryOperatorTestCase("%", "int", "uint", "long"),
            new BinaryOperatorTestCase("%", "int", "long", "long"),
            new BinaryOperatorTestCase("%", "int", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("%", "int", "char", "int"),
            new BinaryOperatorTestCase("%", "int", "float", "float"),
            new BinaryOperatorTestCase("%", "int", "double", "double"),
            new BinaryOperatorTestCase("%", "int", "decimal", "decimal"),
            new BinaryOperatorTestCase("%", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "uint", "sbyte", "long"),
            new BinaryOperatorTestCase("%", "uint", "byte", "uint"),
            new BinaryOperatorTestCase("%", "uint", "short", "long"),
            new BinaryOperatorTestCase("%", "uint", "ushort", "uint"),
            new BinaryOperatorTestCase("%", "uint", "int", "long"),
            new BinaryOperatorTestCase("%", "uint", "uint", "uint"),
            new BinaryOperatorTestCase("%", "uint", "long", "long"),
            new BinaryOperatorTestCase("%", "uint", "ulong", "ulong"),
            new BinaryOperatorTestCase("%", "uint", "char", "uint"),
            new BinaryOperatorTestCase("%", "uint", "float", "float"),
            new BinaryOperatorTestCase("%", "uint", "double", "double"),
            new BinaryOperatorTestCase("%", "uint", "decimal", "decimal"),
            new BinaryOperatorTestCase("%", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "long", "sbyte", "long"),
            new BinaryOperatorTestCase("%", "long", "byte", "long"),
            new BinaryOperatorTestCase("%", "long", "short", "long"),
            new BinaryOperatorTestCase("%", "long", "ushort", "long"),
            new BinaryOperatorTestCase("%", "long", "int", "long"),
            new BinaryOperatorTestCase("%", "long", "uint", "long"),
            new BinaryOperatorTestCase("%", "long", "long", "long"),
            new BinaryOperatorTestCase("%", "long", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("%", "long", "char", "long"),
            new BinaryOperatorTestCase("%", "long", "float", "float"),
            new BinaryOperatorTestCase("%", "long", "double", "double"),
            new BinaryOperatorTestCase("%", "long", "decimal", "decimal"),
            new BinaryOperatorTestCase("%", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "ulong", "sbyte", "#ambiguous"),
            new BinaryOperatorTestCase("%", "ulong", "byte", "ulong"),
            new BinaryOperatorTestCase("%", "ulong", "short", "#ambiguous"),
            new BinaryOperatorTestCase("%", "ulong", "ushort", "ulong"),
            new BinaryOperatorTestCase("%", "ulong", "int", "#ambiguous"),
            new BinaryOperatorTestCase("%", "ulong", "uint", "ulong"),
            new BinaryOperatorTestCase("%", "ulong", "long", "#ambiguous"),
            new BinaryOperatorTestCase("%", "ulong", "ulong", "ulong"),
            new BinaryOperatorTestCase("%", "ulong", "char", "ulong"),
            new BinaryOperatorTestCase("%", "ulong", "float", "float"),
            new BinaryOperatorTestCase("%", "ulong", "double", "double"),
            new BinaryOperatorTestCase("%", "ulong", "decimal", "decimal"),
            new BinaryOperatorTestCase("%", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "char", "sbyte", "int"),
            new BinaryOperatorTestCase("%", "char", "byte", "int"),
            new BinaryOperatorTestCase("%", "char", "short", "int"),
            new BinaryOperatorTestCase("%", "char", "ushort", "int"),
            new BinaryOperatorTestCase("%", "char", "int", "int"),
            new BinaryOperatorTestCase("%", "char", "uint", "uint"),
            new BinaryOperatorTestCase("%", "char", "long", "long"),
            new BinaryOperatorTestCase("%", "char", "ulong", "ulong"),
            new BinaryOperatorTestCase("%", "char", "char", "int"),
            new BinaryOperatorTestCase("%", "char", "float", "float"),
            new BinaryOperatorTestCase("%", "char", "double", "double"),
            new BinaryOperatorTestCase("%", "char", "decimal", "decimal"),
            new BinaryOperatorTestCase("%", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "float", "sbyte", "float"),
            new BinaryOperatorTestCase("%", "float", "byte", "float"),
            new BinaryOperatorTestCase("%", "float", "short", "float"),
            new BinaryOperatorTestCase("%", "float", "ushort", "float"),
            new BinaryOperatorTestCase("%", "float", "int", "float"),
            new BinaryOperatorTestCase("%", "float", "uint", "float"),
            new BinaryOperatorTestCase("%", "float", "long", "float"),
            new BinaryOperatorTestCase("%", "float", "ulong", "float"),
            new BinaryOperatorTestCase("%", "float", "char", "float"),
            new BinaryOperatorTestCase("%", "float", "float", "float"),
            new BinaryOperatorTestCase("%", "float", "double", "double"),
            new BinaryOperatorTestCase("%", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("%", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "double", "sbyte", "double"),
            new BinaryOperatorTestCase("%", "double", "byte", "double"),
            new BinaryOperatorTestCase("%", "double", "short", "double"),
            new BinaryOperatorTestCase("%", "double", "ushort", "double"),
            new BinaryOperatorTestCase("%", "double", "int", "double"),
            new BinaryOperatorTestCase("%", "double", "uint", "double"),
            new BinaryOperatorTestCase("%", "double", "long", "double"),
            new BinaryOperatorTestCase("%", "double", "ulong", "double"),
            new BinaryOperatorTestCase("%", "double", "char", "double"),
            new BinaryOperatorTestCase("%", "double", "float", "double"),
            new BinaryOperatorTestCase("%", "double", "double", "double"),
            new BinaryOperatorTestCase("%", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("%", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "decimal", "sbyte", "decimal"),
            new BinaryOperatorTestCase("%", "decimal", "byte", "decimal"),
            new BinaryOperatorTestCase("%", "decimal", "short", "decimal"),
            new BinaryOperatorTestCase("%", "decimal", "ushort", "decimal"),
            new BinaryOperatorTestCase("%", "decimal", "int", "decimal"),
            new BinaryOperatorTestCase("%", "decimal", "uint", "decimal"),
            new BinaryOperatorTestCase("%", "decimal", "long", "decimal"),
            new BinaryOperatorTestCase("%", "decimal", "ulong", "decimal"),
            new BinaryOperatorTestCase("%", "decimal", "char", "decimal"),
            new BinaryOperatorTestCase("%", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("%", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("%", "decimal", "decimal", "decimal"),
            new BinaryOperatorTestCase("%", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("%", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "sbyte", "sbyte", "int"),
            new BinaryOperatorTestCase("+", "sbyte", "byte", "int"),
            new BinaryOperatorTestCase("+", "sbyte", "short", "int"),
            new BinaryOperatorTestCase("+", "sbyte", "ushort", "int"),
            new BinaryOperatorTestCase("+", "sbyte", "int", "int"),
            new BinaryOperatorTestCase("+", "sbyte", "uint", "long"),
            new BinaryOperatorTestCase("+", "sbyte", "long", "long"),
            new BinaryOperatorTestCase("+", "sbyte", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("+", "sbyte", "char", "int"),
            new BinaryOperatorTestCase("+", "sbyte", "float", "float"),
            new BinaryOperatorTestCase("+", "sbyte", "double", "double"),
            new BinaryOperatorTestCase("+", "sbyte", "decimal", "decimal"),
            new BinaryOperatorTestCase("+", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "sbyte", "string", "string"),
            new BinaryOperatorTestCase("+", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "byte", "sbyte", "int"),
            new BinaryOperatorTestCase("+", "byte", "byte", "int"),
            new BinaryOperatorTestCase("+", "byte", "short", "int"),
            new BinaryOperatorTestCase("+", "byte", "ushort", "int"),
            new BinaryOperatorTestCase("+", "byte", "int", "int"),
            new BinaryOperatorTestCase("+", "byte", "uint", "uint"),
            new BinaryOperatorTestCase("+", "byte", "long", "long"),
            new BinaryOperatorTestCase("+", "byte", "ulong", "ulong"),
            new BinaryOperatorTestCase("+", "byte", "char", "int"),
            new BinaryOperatorTestCase("+", "byte", "float", "float"),
            new BinaryOperatorTestCase("+", "byte", "double", "double"),
            new BinaryOperatorTestCase("+", "byte", "decimal", "decimal"),
            new BinaryOperatorTestCase("+", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "byte", "string", "string"),
            new BinaryOperatorTestCase("+", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "short", "sbyte", "int"),
            new BinaryOperatorTestCase("+", "short", "byte", "int"),
            new BinaryOperatorTestCase("+", "short", "short", "int"),
            new BinaryOperatorTestCase("+", "short", "ushort", "int"),
            new BinaryOperatorTestCase("+", "short", "int", "int"),
            new BinaryOperatorTestCase("+", "short", "uint", "long"),
            new BinaryOperatorTestCase("+", "short", "long", "long"),
            new BinaryOperatorTestCase("+", "short", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("+", "short", "char", "int"),
            new BinaryOperatorTestCase("+", "short", "float", "float"),
            new BinaryOperatorTestCase("+", "short", "double", "double"),
            new BinaryOperatorTestCase("+", "short", "decimal", "decimal"),
            new BinaryOperatorTestCase("+", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "short", "string", "string"),
            new BinaryOperatorTestCase("+", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "ushort", "sbyte", "int"),
            new BinaryOperatorTestCase("+", "ushort", "byte", "int"),
            new BinaryOperatorTestCase("+", "ushort", "short", "int"),
            new BinaryOperatorTestCase("+", "ushort", "ushort", "int"),
            new BinaryOperatorTestCase("+", "ushort", "int", "int"),
            new BinaryOperatorTestCase("+", "ushort", "uint", "uint"),
            new BinaryOperatorTestCase("+", "ushort", "long", "long"),
            new BinaryOperatorTestCase("+", "ushort", "ulong", "ulong"),
            new BinaryOperatorTestCase("+", "ushort", "char", "int"),
            new BinaryOperatorTestCase("+", "ushort", "float", "float"),
            new BinaryOperatorTestCase("+", "ushort", "double", "double"),
            new BinaryOperatorTestCase("+", "ushort", "decimal", "decimal"),
            new BinaryOperatorTestCase("+", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "ushort", "string", "string"),
            new BinaryOperatorTestCase("+", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "int", "sbyte", "int"),
            new BinaryOperatorTestCase("+", "int", "byte", "int"),
            new BinaryOperatorTestCase("+", "int", "short", "int"),
            new BinaryOperatorTestCase("+", "int", "ushort", "int"),
            new BinaryOperatorTestCase("+", "int", "int", "int"),
            new BinaryOperatorTestCase("+", "int", "uint", "long"),
            new BinaryOperatorTestCase("+", "int", "long", "long"),
            new BinaryOperatorTestCase("+", "int", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("+", "int", "char", "int"),
            new BinaryOperatorTestCase("+", "int", "float", "float"),
            new BinaryOperatorTestCase("+", "int", "double", "double"),
            new BinaryOperatorTestCase("+", "int", "decimal", "decimal"),
            new BinaryOperatorTestCase("+", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "int", "string", "string"),
            new BinaryOperatorTestCase("+", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "uint", "sbyte", "long"),
            new BinaryOperatorTestCase("+", "uint", "byte", "uint"),
            new BinaryOperatorTestCase("+", "uint", "short", "long"),
            new BinaryOperatorTestCase("+", "uint", "ushort", "uint"),
            new BinaryOperatorTestCase("+", "uint", "int", "long"),
            new BinaryOperatorTestCase("+", "uint", "uint", "uint"),
            new BinaryOperatorTestCase("+", "uint", "long", "long"),
            new BinaryOperatorTestCase("+", "uint", "ulong", "ulong"),
            new BinaryOperatorTestCase("+", "uint", "char", "uint"),
            new BinaryOperatorTestCase("+", "uint", "float", "float"),
            new BinaryOperatorTestCase("+", "uint", "double", "double"),
            new BinaryOperatorTestCase("+", "uint", "decimal", "decimal"),
            new BinaryOperatorTestCase("+", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "uint", "string", "string"),
            new BinaryOperatorTestCase("+", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "long", "sbyte", "long"),
            new BinaryOperatorTestCase("+", "long", "byte", "long"),
            new BinaryOperatorTestCase("+", "long", "short", "long"),
            new BinaryOperatorTestCase("+", "long", "ushort", "long"),
            new BinaryOperatorTestCase("+", "long", "int", "long"),
            new BinaryOperatorTestCase("+", "long", "uint", "long"),
            new BinaryOperatorTestCase("+", "long", "long", "long"),
            new BinaryOperatorTestCase("+", "long", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("+", "long", "char", "long"),
            new BinaryOperatorTestCase("+", "long", "float", "float"),
            new BinaryOperatorTestCase("+", "long", "double", "double"),
            new BinaryOperatorTestCase("+", "long", "decimal", "decimal"),
            new BinaryOperatorTestCase("+", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "long", "string", "string"),
            new BinaryOperatorTestCase("+", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "ulong", "sbyte", "#ambiguous"),
            new BinaryOperatorTestCase("+", "ulong", "byte", "ulong"),
            new BinaryOperatorTestCase("+", "ulong", "short", "#ambiguous"),
            new BinaryOperatorTestCase("+", "ulong", "ushort", "ulong"),
            new BinaryOperatorTestCase("+", "ulong", "int", "#ambiguous"),
            new BinaryOperatorTestCase("+", "ulong", "uint", "ulong"),
            new BinaryOperatorTestCase("+", "ulong", "long", "#ambiguous"),
            new BinaryOperatorTestCase("+", "ulong", "ulong", "ulong"),
            new BinaryOperatorTestCase("+", "ulong", "char", "ulong"),
            new BinaryOperatorTestCase("+", "ulong", "float", "float"),
            new BinaryOperatorTestCase("+", "ulong", "double", "double"),
            new BinaryOperatorTestCase("+", "ulong", "decimal", "decimal"),
            new BinaryOperatorTestCase("+", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "ulong", "string", "string"),
            new BinaryOperatorTestCase("+", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "char", "sbyte", "int"),
            new BinaryOperatorTestCase("+", "char", "byte", "int"),
            new BinaryOperatorTestCase("+", "char", "short", "int"),
            new BinaryOperatorTestCase("+", "char", "ushort", "int"),
            new BinaryOperatorTestCase("+", "char", "int", "int"),
            new BinaryOperatorTestCase("+", "char", "uint", "uint"),
            new BinaryOperatorTestCase("+", "char", "long", "long"),
            new BinaryOperatorTestCase("+", "char", "ulong", "ulong"),
            new BinaryOperatorTestCase("+", "char", "char", "int"),
            new BinaryOperatorTestCase("+", "char", "float", "float"),
            new BinaryOperatorTestCase("+", "char", "double", "double"),
            new BinaryOperatorTestCase("+", "char", "decimal", "decimal"),
            new BinaryOperatorTestCase("+", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "char", "string", "string"),
            new BinaryOperatorTestCase("+", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "float", "sbyte", "float"),
            new BinaryOperatorTestCase("+", "float", "byte", "float"),
            new BinaryOperatorTestCase("+", "float", "short", "float"),
            new BinaryOperatorTestCase("+", "float", "ushort", "float"),
            new BinaryOperatorTestCase("+", "float", "int", "float"),
            new BinaryOperatorTestCase("+", "float", "uint", "float"),
            new BinaryOperatorTestCase("+", "float", "long", "float"),
            new BinaryOperatorTestCase("+", "float", "ulong", "float"),
            new BinaryOperatorTestCase("+", "float", "char", "float"),
            new BinaryOperatorTestCase("+", "float", "float", "float"),
            new BinaryOperatorTestCase("+", "float", "double", "double"),
            new BinaryOperatorTestCase("+", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("+", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "float", "string", "string"),
            new BinaryOperatorTestCase("+", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "double", "sbyte", "double"),
            new BinaryOperatorTestCase("+", "double", "byte", "double"),
            new BinaryOperatorTestCase("+", "double", "short", "double"),
            new BinaryOperatorTestCase("+", "double", "ushort", "double"),
            new BinaryOperatorTestCase("+", "double", "int", "double"),
            new BinaryOperatorTestCase("+", "double", "uint", "double"),
            new BinaryOperatorTestCase("+", "double", "long", "double"),
            new BinaryOperatorTestCase("+", "double", "ulong", "double"),
            new BinaryOperatorTestCase("+", "double", "char", "double"),
            new BinaryOperatorTestCase("+", "double", "float", "double"),
            new BinaryOperatorTestCase("+", "double", "double", "double"),
            new BinaryOperatorTestCase("+", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("+", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "double", "string", "string"),
            new BinaryOperatorTestCase("+", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "decimal", "sbyte", "decimal"),
            new BinaryOperatorTestCase("+", "decimal", "byte", "decimal"),
            new BinaryOperatorTestCase("+", "decimal", "short", "decimal"),
            new BinaryOperatorTestCase("+", "decimal", "ushort", "decimal"),
            new BinaryOperatorTestCase("+", "decimal", "int", "decimal"),
            new BinaryOperatorTestCase("+", "decimal", "uint", "decimal"),
            new BinaryOperatorTestCase("+", "decimal", "long", "decimal"),
            new BinaryOperatorTestCase("+", "decimal", "ulong", "decimal"),
            new BinaryOperatorTestCase("+", "decimal", "char", "decimal"),
            new BinaryOperatorTestCase("+", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("+", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("+", "decimal", "decimal", "decimal"),
            new BinaryOperatorTestCase("+", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "decimal", "string", "string"),
            new BinaryOperatorTestCase("+", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "bool", "string", "string"),
            new BinaryOperatorTestCase("+", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("+", "string", "sbyte", "string"),
            new BinaryOperatorTestCase("+", "string", "byte", "string"),
            new BinaryOperatorTestCase("+", "string", "short", "string"),
            new BinaryOperatorTestCase("+", "string", "ushort", "string"),
            new BinaryOperatorTestCase("+", "string", "int", "string"),
            new BinaryOperatorTestCase("+", "string", "uint", "string"),
            new BinaryOperatorTestCase("+", "string", "long", "string"),
            new BinaryOperatorTestCase("+", "string", "ulong", "string"),
            new BinaryOperatorTestCase("+", "string", "char", "string"),
            new BinaryOperatorTestCase("+", "string", "float", "string"),
            new BinaryOperatorTestCase("+", "string", "double", "string"),
            new BinaryOperatorTestCase("+", "string", "decimal", "string"),
            new BinaryOperatorTestCase("+", "string", "bool", "string"),
            new BinaryOperatorTestCase("+", "string", "string", "string"),
            new BinaryOperatorTestCase("+", "string", "object", "string"),
            new BinaryOperatorTestCase("+", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("+", "object", "string", "string"),
            new BinaryOperatorTestCase("+", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "sbyte", "sbyte", "int"),
            new BinaryOperatorTestCase("-", "sbyte", "byte", "int"),
            new BinaryOperatorTestCase("-", "sbyte", "short", "int"),
            new BinaryOperatorTestCase("-", "sbyte", "ushort", "int"),
            new BinaryOperatorTestCase("-", "sbyte", "int", "int"),
            new BinaryOperatorTestCase("-", "sbyte", "uint", "long"),
            new BinaryOperatorTestCase("-", "sbyte", "long", "long"),
            new BinaryOperatorTestCase("-", "sbyte", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("-", "sbyte", "char", "int"),
            new BinaryOperatorTestCase("-", "sbyte", "float", "float"),
            new BinaryOperatorTestCase("-", "sbyte", "double", "double"),
            new BinaryOperatorTestCase("-", "sbyte", "decimal", "decimal"),
            new BinaryOperatorTestCase("-", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "byte", "sbyte", "int"),
            new BinaryOperatorTestCase("-", "byte", "byte", "int"),
            new BinaryOperatorTestCase("-", "byte", "short", "int"),
            new BinaryOperatorTestCase("-", "byte", "ushort", "int"),
            new BinaryOperatorTestCase("-", "byte", "int", "int"),
            new BinaryOperatorTestCase("-", "byte", "uint", "uint"),
            new BinaryOperatorTestCase("-", "byte", "long", "long"),
            new BinaryOperatorTestCase("-", "byte", "ulong", "ulong"),
            new BinaryOperatorTestCase("-", "byte", "char", "int"),
            new BinaryOperatorTestCase("-", "byte", "float", "float"),
            new BinaryOperatorTestCase("-", "byte", "double", "double"),
            new BinaryOperatorTestCase("-", "byte", "decimal", "decimal"),
            new BinaryOperatorTestCase("-", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "short", "sbyte", "int"),
            new BinaryOperatorTestCase("-", "short", "byte", "int"),
            new BinaryOperatorTestCase("-", "short", "short", "int"),
            new BinaryOperatorTestCase("-", "short", "ushort", "int"),
            new BinaryOperatorTestCase("-", "short", "int", "int"),
            new BinaryOperatorTestCase("-", "short", "uint", "long"),
            new BinaryOperatorTestCase("-", "short", "long", "long"),
            new BinaryOperatorTestCase("-", "short", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("-", "short", "char", "int"),
            new BinaryOperatorTestCase("-", "short", "float", "float"),
            new BinaryOperatorTestCase("-", "short", "double", "double"),
            new BinaryOperatorTestCase("-", "short", "decimal", "decimal"),
            new BinaryOperatorTestCase("-", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "ushort", "sbyte", "int"),
            new BinaryOperatorTestCase("-", "ushort", "byte", "int"),
            new BinaryOperatorTestCase("-", "ushort", "short", "int"),
            new BinaryOperatorTestCase("-", "ushort", "ushort", "int"),
            new BinaryOperatorTestCase("-", "ushort", "int", "int"),
            new BinaryOperatorTestCase("-", "ushort", "uint", "uint"),
            new BinaryOperatorTestCase("-", "ushort", "long", "long"),
            new BinaryOperatorTestCase("-", "ushort", "ulong", "ulong"),
            new BinaryOperatorTestCase("-", "ushort", "char", "int"),
            new BinaryOperatorTestCase("-", "ushort", "float", "float"),
            new BinaryOperatorTestCase("-", "ushort", "double", "double"),
            new BinaryOperatorTestCase("-", "ushort", "decimal", "decimal"),
            new BinaryOperatorTestCase("-", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "int", "sbyte", "int"),
            new BinaryOperatorTestCase("-", "int", "byte", "int"),
            new BinaryOperatorTestCase("-", "int", "short", "int"),
            new BinaryOperatorTestCase("-", "int", "ushort", "int"),
            new BinaryOperatorTestCase("-", "int", "int", "int"),
            new BinaryOperatorTestCase("-", "int", "uint", "long"),
            new BinaryOperatorTestCase("-", "int", "long", "long"),
            new BinaryOperatorTestCase("-", "int", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("-", "int", "char", "int"),
            new BinaryOperatorTestCase("-", "int", "float", "float"),
            new BinaryOperatorTestCase("-", "int", "double", "double"),
            new BinaryOperatorTestCase("-", "int", "decimal", "decimal"),
            new BinaryOperatorTestCase("-", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "uint", "sbyte", "long"),
            new BinaryOperatorTestCase("-", "uint", "byte", "uint"),
            new BinaryOperatorTestCase("-", "uint", "short", "long"),
            new BinaryOperatorTestCase("-", "uint", "ushort", "uint"),
            new BinaryOperatorTestCase("-", "uint", "int", "long"),
            new BinaryOperatorTestCase("-", "uint", "uint", "uint"),
            new BinaryOperatorTestCase("-", "uint", "long", "long"),
            new BinaryOperatorTestCase("-", "uint", "ulong", "ulong"),
            new BinaryOperatorTestCase("-", "uint", "char", "uint"),
            new BinaryOperatorTestCase("-", "uint", "float", "float"),
            new BinaryOperatorTestCase("-", "uint", "double", "double"),
            new BinaryOperatorTestCase("-", "uint", "decimal", "decimal"),
            new BinaryOperatorTestCase("-", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "long", "sbyte", "long"),
            new BinaryOperatorTestCase("-", "long", "byte", "long"),
            new BinaryOperatorTestCase("-", "long", "short", "long"),
            new BinaryOperatorTestCase("-", "long", "ushort", "long"),
            new BinaryOperatorTestCase("-", "long", "int", "long"),
            new BinaryOperatorTestCase("-", "long", "uint", "long"),
            new BinaryOperatorTestCase("-", "long", "long", "long"),
            new BinaryOperatorTestCase("-", "long", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("-", "long", "char", "long"),
            new BinaryOperatorTestCase("-", "long", "float", "float"),
            new BinaryOperatorTestCase("-", "long", "double", "double"),
            new BinaryOperatorTestCase("-", "long", "decimal", "decimal"),
            new BinaryOperatorTestCase("-", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "ulong", "sbyte", "#ambiguous"),
            new BinaryOperatorTestCase("-", "ulong", "byte", "ulong"),
            new BinaryOperatorTestCase("-", "ulong", "short", "#ambiguous"),
            new BinaryOperatorTestCase("-", "ulong", "ushort", "ulong"),
            new BinaryOperatorTestCase("-", "ulong", "int", "#ambiguous"),
            new BinaryOperatorTestCase("-", "ulong", "uint", "ulong"),
            new BinaryOperatorTestCase("-", "ulong", "long", "#ambiguous"),
            new BinaryOperatorTestCase("-", "ulong", "ulong", "ulong"),
            new BinaryOperatorTestCase("-", "ulong", "char", "ulong"),
            new BinaryOperatorTestCase("-", "ulong", "float", "float"),
            new BinaryOperatorTestCase("-", "ulong", "double", "double"),
            new BinaryOperatorTestCase("-", "ulong", "decimal", "decimal"),
            new BinaryOperatorTestCase("-", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "char", "sbyte", "int"),
            new BinaryOperatorTestCase("-", "char", "byte", "int"),
            new BinaryOperatorTestCase("-", "char", "short", "int"),
            new BinaryOperatorTestCase("-", "char", "ushort", "int"),
            new BinaryOperatorTestCase("-", "char", "int", "int"),
            new BinaryOperatorTestCase("-", "char", "uint", "uint"),
            new BinaryOperatorTestCase("-", "char", "long", "long"),
            new BinaryOperatorTestCase("-", "char", "ulong", "ulong"),
            new BinaryOperatorTestCase("-", "char", "char", "int"),
            new BinaryOperatorTestCase("-", "char", "float", "float"),
            new BinaryOperatorTestCase("-", "char", "double", "double"),
            new BinaryOperatorTestCase("-", "char", "decimal", "decimal"),
            new BinaryOperatorTestCase("-", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "float", "sbyte", "float"),
            new BinaryOperatorTestCase("-", "float", "byte", "float"),
            new BinaryOperatorTestCase("-", "float", "short", "float"),
            new BinaryOperatorTestCase("-", "float", "ushort", "float"),
            new BinaryOperatorTestCase("-", "float", "int", "float"),
            new BinaryOperatorTestCase("-", "float", "uint", "float"),
            new BinaryOperatorTestCase("-", "float", "long", "float"),
            new BinaryOperatorTestCase("-", "float", "ulong", "float"),
            new BinaryOperatorTestCase("-", "float", "char", "float"),
            new BinaryOperatorTestCase("-", "float", "float", "float"),
            new BinaryOperatorTestCase("-", "float", "double", "double"),
            new BinaryOperatorTestCase("-", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("-", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "double", "sbyte", "double"),
            new BinaryOperatorTestCase("-", "double", "byte", "double"),
            new BinaryOperatorTestCase("-", "double", "short", "double"),
            new BinaryOperatorTestCase("-", "double", "ushort", "double"),
            new BinaryOperatorTestCase("-", "double", "int", "double"),
            new BinaryOperatorTestCase("-", "double", "uint", "double"),
            new BinaryOperatorTestCase("-", "double", "long", "double"),
            new BinaryOperatorTestCase("-", "double", "ulong", "double"),
            new BinaryOperatorTestCase("-", "double", "char", "double"),
            new BinaryOperatorTestCase("-", "double", "float", "double"),
            new BinaryOperatorTestCase("-", "double", "double", "double"),
            new BinaryOperatorTestCase("-", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("-", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "decimal", "sbyte", "decimal"),
            new BinaryOperatorTestCase("-", "decimal", "byte", "decimal"),
            new BinaryOperatorTestCase("-", "decimal", "short", "decimal"),
            new BinaryOperatorTestCase("-", "decimal", "ushort", "decimal"),
            new BinaryOperatorTestCase("-", "decimal", "int", "decimal"),
            new BinaryOperatorTestCase("-", "decimal", "uint", "decimal"),
            new BinaryOperatorTestCase("-", "decimal", "long", "decimal"),
            new BinaryOperatorTestCase("-", "decimal", "ulong", "decimal"),
            new BinaryOperatorTestCase("-", "decimal", "char", "decimal"),
            new BinaryOperatorTestCase("-", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("-", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("-", "decimal", "decimal", "decimal"),
            new BinaryOperatorTestCase("-", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("-", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "sbyte", "sbyte", "bool"),
            new BinaryOperatorTestCase("=", "sbyte", "byte", "bool"),
            new BinaryOperatorTestCase("=", "sbyte", "short", "bool"),
            new BinaryOperatorTestCase("=", "sbyte", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "sbyte", "int", "bool"),
            new BinaryOperatorTestCase("=", "sbyte", "uint", "bool"),
            new BinaryOperatorTestCase("=", "sbyte", "long", "bool"),
            new BinaryOperatorTestCase("=", "sbyte", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("=", "sbyte", "char", "bool"),
            new BinaryOperatorTestCase("=", "sbyte", "float", "bool"),
            new BinaryOperatorTestCase("=", "sbyte", "double", "bool"),
            new BinaryOperatorTestCase("=", "sbyte", "decimal", "bool"),
            new BinaryOperatorTestCase("=", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "byte", "sbyte", "bool"),
            new BinaryOperatorTestCase("=", "byte", "byte", "bool"),
            new BinaryOperatorTestCase("=", "byte", "short", "bool"),
            new BinaryOperatorTestCase("=", "byte", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "byte", "int", "bool"),
            new BinaryOperatorTestCase("=", "byte", "uint", "bool"),
            new BinaryOperatorTestCase("=", "byte", "long", "bool"),
            new BinaryOperatorTestCase("=", "byte", "ulong", "bool"),
            new BinaryOperatorTestCase("=", "byte", "char", "bool"),
            new BinaryOperatorTestCase("=", "byte", "float", "bool"),
            new BinaryOperatorTestCase("=", "byte", "double", "bool"),
            new BinaryOperatorTestCase("=", "byte", "decimal", "bool"),
            new BinaryOperatorTestCase("=", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "short", "sbyte", "bool"),
            new BinaryOperatorTestCase("=", "short", "byte", "bool"),
            new BinaryOperatorTestCase("=", "short", "short", "bool"),
            new BinaryOperatorTestCase("=", "short", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "short", "int", "bool"),
            new BinaryOperatorTestCase("=", "short", "uint", "bool"),
            new BinaryOperatorTestCase("=", "short", "long", "bool"),
            new BinaryOperatorTestCase("=", "short", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("=", "short", "char", "bool"),
            new BinaryOperatorTestCase("=", "short", "float", "bool"),
            new BinaryOperatorTestCase("=", "short", "double", "bool"),
            new BinaryOperatorTestCase("=", "short", "decimal", "bool"),
            new BinaryOperatorTestCase("=", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "ushort", "sbyte", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "byte", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "short", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "int", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "uint", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "long", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "ulong", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "char", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "float", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "double", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "decimal", "bool"),
            new BinaryOperatorTestCase("=", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "int", "sbyte", "bool"),
            new BinaryOperatorTestCase("=", "int", "byte", "bool"),
            new BinaryOperatorTestCase("=", "int", "short", "bool"),
            new BinaryOperatorTestCase("=", "int", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "int", "int", "bool"),
            new BinaryOperatorTestCase("=", "int", "uint", "bool"),
            new BinaryOperatorTestCase("=", "int", "long", "bool"),
            new BinaryOperatorTestCase("=", "int", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("=", "int", "char", "bool"),
            new BinaryOperatorTestCase("=", "int", "float", "bool"),
            new BinaryOperatorTestCase("=", "int", "double", "bool"),
            new BinaryOperatorTestCase("=", "int", "decimal", "bool"),
            new BinaryOperatorTestCase("=", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "uint", "sbyte", "bool"),
            new BinaryOperatorTestCase("=", "uint", "byte", "bool"),
            new BinaryOperatorTestCase("=", "uint", "short", "bool"),
            new BinaryOperatorTestCase("=", "uint", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "uint", "int", "bool"),
            new BinaryOperatorTestCase("=", "uint", "uint", "bool"),
            new BinaryOperatorTestCase("=", "uint", "long", "bool"),
            new BinaryOperatorTestCase("=", "uint", "ulong", "bool"),
            new BinaryOperatorTestCase("=", "uint", "char", "bool"),
            new BinaryOperatorTestCase("=", "uint", "float", "bool"),
            new BinaryOperatorTestCase("=", "uint", "double", "bool"),
            new BinaryOperatorTestCase("=", "uint", "decimal", "bool"),
            new BinaryOperatorTestCase("=", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "long", "sbyte", "bool"),
            new BinaryOperatorTestCase("=", "long", "byte", "bool"),
            new BinaryOperatorTestCase("=", "long", "short", "bool"),
            new BinaryOperatorTestCase("=", "long", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "long", "int", "bool"),
            new BinaryOperatorTestCase("=", "long", "uint", "bool"),
            new BinaryOperatorTestCase("=", "long", "long", "bool"),
            new BinaryOperatorTestCase("=", "long", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("=", "long", "char", "bool"),
            new BinaryOperatorTestCase("=", "long", "float", "bool"),
            new BinaryOperatorTestCase("=", "long", "double", "bool"),
            new BinaryOperatorTestCase("=", "long", "decimal", "bool"),
            new BinaryOperatorTestCase("=", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "ulong", "sbyte", "#ambiguous"),
            new BinaryOperatorTestCase("=", "ulong", "byte", "bool"),
            new BinaryOperatorTestCase("=", "ulong", "short", "#ambiguous"),
            new BinaryOperatorTestCase("=", "ulong", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "ulong", "int", "#ambiguous"),
            new BinaryOperatorTestCase("=", "ulong", "uint", "bool"),
            new BinaryOperatorTestCase("=", "ulong", "long", "#ambiguous"),
            new BinaryOperatorTestCase("=", "ulong", "ulong", "bool"),
            new BinaryOperatorTestCase("=", "ulong", "char", "bool"),
            new BinaryOperatorTestCase("=", "ulong", "float", "bool"),
            new BinaryOperatorTestCase("=", "ulong", "double", "bool"),
            new BinaryOperatorTestCase("=", "ulong", "decimal", "bool"),
            new BinaryOperatorTestCase("=", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "char", "sbyte", "bool"),
            new BinaryOperatorTestCase("=", "char", "byte", "bool"),
            new BinaryOperatorTestCase("=", "char", "short", "bool"),
            new BinaryOperatorTestCase("=", "char", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "char", "int", "bool"),
            new BinaryOperatorTestCase("=", "char", "uint", "bool"),
            new BinaryOperatorTestCase("=", "char", "long", "bool"),
            new BinaryOperatorTestCase("=", "char", "ulong", "bool"),
            new BinaryOperatorTestCase("=", "char", "char", "bool"),
            new BinaryOperatorTestCase("=", "char", "float", "bool"),
            new BinaryOperatorTestCase("=", "char", "double", "bool"),
            new BinaryOperatorTestCase("=", "char", "decimal", "bool"),
            new BinaryOperatorTestCase("=", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "float", "sbyte", "bool"),
            new BinaryOperatorTestCase("=", "float", "byte", "bool"),
            new BinaryOperatorTestCase("=", "float", "short", "bool"),
            new BinaryOperatorTestCase("=", "float", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "float", "int", "bool"),
            new BinaryOperatorTestCase("=", "float", "uint", "bool"),
            new BinaryOperatorTestCase("=", "float", "long", "bool"),
            new BinaryOperatorTestCase("=", "float", "ulong", "bool"),
            new BinaryOperatorTestCase("=", "float", "char", "bool"),
            new BinaryOperatorTestCase("=", "float", "float", "bool"),
            new BinaryOperatorTestCase("=", "float", "double", "bool"),
            new BinaryOperatorTestCase("=", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("=", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "double", "sbyte", "bool"),
            new BinaryOperatorTestCase("=", "double", "byte", "bool"),
            new BinaryOperatorTestCase("=", "double", "short", "bool"),
            new BinaryOperatorTestCase("=", "double", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "double", "int", "bool"),
            new BinaryOperatorTestCase("=", "double", "uint", "bool"),
            new BinaryOperatorTestCase("=", "double", "long", "bool"),
            new BinaryOperatorTestCase("=", "double", "ulong", "bool"),
            new BinaryOperatorTestCase("=", "double", "char", "bool"),
            new BinaryOperatorTestCase("=", "double", "float", "bool"),
            new BinaryOperatorTestCase("=", "double", "double", "bool"),
            new BinaryOperatorTestCase("=", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("=", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "decimal", "sbyte", "bool"),
            new BinaryOperatorTestCase("=", "decimal", "byte", "bool"),
            new BinaryOperatorTestCase("=", "decimal", "short", "bool"),
            new BinaryOperatorTestCase("=", "decimal", "ushort", "bool"),
            new BinaryOperatorTestCase("=", "decimal", "int", "bool"),
            new BinaryOperatorTestCase("=", "decimal", "uint", "bool"),
            new BinaryOperatorTestCase("=", "decimal", "long", "bool"),
            new BinaryOperatorTestCase("=", "decimal", "ulong", "bool"),
            new BinaryOperatorTestCase("=", "decimal", "char", "bool"),
            new BinaryOperatorTestCase("=", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("=", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("=", "decimal", "decimal", "bool"),
            new BinaryOperatorTestCase("=", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "bool", "bool"),
            new BinaryOperatorTestCase("=", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("=", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "string", "string", "bool"),
            new BinaryOperatorTestCase("=", "string", "object", "bool"),
            new BinaryOperatorTestCase("=", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("=", "object", "string", "bool"),
            new BinaryOperatorTestCase("=", "object", "object", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "sbyte", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "short", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "int", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "long", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("!=", "sbyte", "char", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "float", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "double", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "decimal", "bool"),
            new BinaryOperatorTestCase("!=", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "byte", "sbyte", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "short", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "int", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "long", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "ulong", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "char", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "float", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "double", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "decimal", "bool"),
            new BinaryOperatorTestCase("!=", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "short", "sbyte", "bool"),
            new BinaryOperatorTestCase("!=", "short", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "short", "short", "bool"),
            new BinaryOperatorTestCase("!=", "short", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "short", "int", "bool"),
            new BinaryOperatorTestCase("!=", "short", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "short", "long", "bool"),
            new BinaryOperatorTestCase("!=", "short", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("!=", "short", "char", "bool"),
            new BinaryOperatorTestCase("!=", "short", "float", "bool"),
            new BinaryOperatorTestCase("!=", "short", "double", "bool"),
            new BinaryOperatorTestCase("!=", "short", "decimal", "bool"),
            new BinaryOperatorTestCase("!=", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "ushort", "sbyte", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "short", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "int", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "long", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "ulong", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "char", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "float", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "double", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "decimal", "bool"),
            new BinaryOperatorTestCase("!=", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "int", "sbyte", "bool"),
            new BinaryOperatorTestCase("!=", "int", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "int", "short", "bool"),
            new BinaryOperatorTestCase("!=", "int", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "int", "int", "bool"),
            new BinaryOperatorTestCase("!=", "int", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "int", "long", "bool"),
            new BinaryOperatorTestCase("!=", "int", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("!=", "int", "char", "bool"),
            new BinaryOperatorTestCase("!=", "int", "float", "bool"),
            new BinaryOperatorTestCase("!=", "int", "double", "bool"),
            new BinaryOperatorTestCase("!=", "int", "decimal", "bool"),
            new BinaryOperatorTestCase("!=", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "uint", "sbyte", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "short", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "int", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "long", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "ulong", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "char", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "float", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "double", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "decimal", "bool"),
            new BinaryOperatorTestCase("!=", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "long", "sbyte", "bool"),
            new BinaryOperatorTestCase("!=", "long", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "long", "short", "bool"),
            new BinaryOperatorTestCase("!=", "long", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "long", "int", "bool"),
            new BinaryOperatorTestCase("!=", "long", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "long", "long", "bool"),
            new BinaryOperatorTestCase("!=", "long", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("!=", "long", "char", "bool"),
            new BinaryOperatorTestCase("!=", "long", "float", "bool"),
            new BinaryOperatorTestCase("!=", "long", "double", "bool"),
            new BinaryOperatorTestCase("!=", "long", "decimal", "bool"),
            new BinaryOperatorTestCase("!=", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "ulong", "sbyte", "#ambiguous"),
            new BinaryOperatorTestCase("!=", "ulong", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "ulong", "short", "#ambiguous"),
            new BinaryOperatorTestCase("!=", "ulong", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "ulong", "int", "#ambiguous"),
            new BinaryOperatorTestCase("!=", "ulong", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "ulong", "long", "#ambiguous"),
            new BinaryOperatorTestCase("!=", "ulong", "ulong", "bool"),
            new BinaryOperatorTestCase("!=", "ulong", "char", "bool"),
            new BinaryOperatorTestCase("!=", "ulong", "float", "bool"),
            new BinaryOperatorTestCase("!=", "ulong", "double", "bool"),
            new BinaryOperatorTestCase("!=", "ulong", "decimal", "bool"),
            new BinaryOperatorTestCase("!=", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "char", "sbyte", "bool"),
            new BinaryOperatorTestCase("!=", "char", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "char", "short", "bool"),
            new BinaryOperatorTestCase("!=", "char", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "char", "int", "bool"),
            new BinaryOperatorTestCase("!=", "char", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "char", "long", "bool"),
            new BinaryOperatorTestCase("!=", "char", "ulong", "bool"),
            new BinaryOperatorTestCase("!=", "char", "char", "bool"),
            new BinaryOperatorTestCase("!=", "char", "float", "bool"),
            new BinaryOperatorTestCase("!=", "char", "double", "bool"),
            new BinaryOperatorTestCase("!=", "char", "decimal", "bool"),
            new BinaryOperatorTestCase("!=", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "float", "sbyte", "bool"),
            new BinaryOperatorTestCase("!=", "float", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "float", "short", "bool"),
            new BinaryOperatorTestCase("!=", "float", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "float", "int", "bool"),
            new BinaryOperatorTestCase("!=", "float", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "float", "long", "bool"),
            new BinaryOperatorTestCase("!=", "float", "ulong", "bool"),
            new BinaryOperatorTestCase("!=", "float", "char", "bool"),
            new BinaryOperatorTestCase("!=", "float", "float", "bool"),
            new BinaryOperatorTestCase("!=", "float", "double", "bool"),
            new BinaryOperatorTestCase("!=", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "double", "sbyte", "bool"),
            new BinaryOperatorTestCase("!=", "double", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "double", "short", "bool"),
            new BinaryOperatorTestCase("!=", "double", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "double", "int", "bool"),
            new BinaryOperatorTestCase("!=", "double", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "double", "long", "bool"),
            new BinaryOperatorTestCase("!=", "double", "ulong", "bool"),
            new BinaryOperatorTestCase("!=", "double", "char", "bool"),
            new BinaryOperatorTestCase("!=", "double", "float", "bool"),
            new BinaryOperatorTestCase("!=", "double", "double", "bool"),
            new BinaryOperatorTestCase("!=", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "decimal", "sbyte", "bool"),
            new BinaryOperatorTestCase("!=", "decimal", "byte", "bool"),
            new BinaryOperatorTestCase("!=", "decimal", "short", "bool"),
            new BinaryOperatorTestCase("!=", "decimal", "ushort", "bool"),
            new BinaryOperatorTestCase("!=", "decimal", "int", "bool"),
            new BinaryOperatorTestCase("!=", "decimal", "uint", "bool"),
            new BinaryOperatorTestCase("!=", "decimal", "long", "bool"),
            new BinaryOperatorTestCase("!=", "decimal", "ulong", "bool"),
            new BinaryOperatorTestCase("!=", "decimal", "char", "bool"),
            new BinaryOperatorTestCase("!=", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "decimal", "decimal", "bool"),
            new BinaryOperatorTestCase("!=", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "bool", "bool"),
            new BinaryOperatorTestCase("!=", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "string", "string", "bool"),
            new BinaryOperatorTestCase("!=", "string", "object", "bool"),
            new BinaryOperatorTestCase("!=", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("!=", "object", "string", "bool"),
            new BinaryOperatorTestCase("!=", "object", "object", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "sbyte", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "byte", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "short", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "int", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "uint", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "long", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("<", "sbyte", "char", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "float", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "double", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "decimal", "bool"),
            new BinaryOperatorTestCase("<", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "byte", "sbyte", "bool"),
            new BinaryOperatorTestCase("<", "byte", "byte", "bool"),
            new BinaryOperatorTestCase("<", "byte", "short", "bool"),
            new BinaryOperatorTestCase("<", "byte", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "byte", "int", "bool"),
            new BinaryOperatorTestCase("<", "byte", "uint", "bool"),
            new BinaryOperatorTestCase("<", "byte", "long", "bool"),
            new BinaryOperatorTestCase("<", "byte", "ulong", "bool"),
            new BinaryOperatorTestCase("<", "byte", "char", "bool"),
            new BinaryOperatorTestCase("<", "byte", "float", "bool"),
            new BinaryOperatorTestCase("<", "byte", "double", "bool"),
            new BinaryOperatorTestCase("<", "byte", "decimal", "bool"),
            new BinaryOperatorTestCase("<", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "short", "sbyte", "bool"),
            new BinaryOperatorTestCase("<", "short", "byte", "bool"),
            new BinaryOperatorTestCase("<", "short", "short", "bool"),
            new BinaryOperatorTestCase("<", "short", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "short", "int", "bool"),
            new BinaryOperatorTestCase("<", "short", "uint", "bool"),
            new BinaryOperatorTestCase("<", "short", "long", "bool"),
            new BinaryOperatorTestCase("<", "short", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("<", "short", "char", "bool"),
            new BinaryOperatorTestCase("<", "short", "float", "bool"),
            new BinaryOperatorTestCase("<", "short", "double", "bool"),
            new BinaryOperatorTestCase("<", "short", "decimal", "bool"),
            new BinaryOperatorTestCase("<", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "ushort", "sbyte", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "byte", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "short", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "int", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "uint", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "long", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "ulong", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "char", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "float", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "double", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "decimal", "bool"),
            new BinaryOperatorTestCase("<", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "int", "sbyte", "bool"),
            new BinaryOperatorTestCase("<", "int", "byte", "bool"),
            new BinaryOperatorTestCase("<", "int", "short", "bool"),
            new BinaryOperatorTestCase("<", "int", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "int", "int", "bool"),
            new BinaryOperatorTestCase("<", "int", "uint", "bool"),
            new BinaryOperatorTestCase("<", "int", "long", "bool"),
            new BinaryOperatorTestCase("<", "int", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("<", "int", "char", "bool"),
            new BinaryOperatorTestCase("<", "int", "float", "bool"),
            new BinaryOperatorTestCase("<", "int", "double", "bool"),
            new BinaryOperatorTestCase("<", "int", "decimal", "bool"),
            new BinaryOperatorTestCase("<", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "uint", "sbyte", "bool"),
            new BinaryOperatorTestCase("<", "uint", "byte", "bool"),
            new BinaryOperatorTestCase("<", "uint", "short", "bool"),
            new BinaryOperatorTestCase("<", "uint", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "uint", "int", "bool"),
            new BinaryOperatorTestCase("<", "uint", "uint", "bool"),
            new BinaryOperatorTestCase("<", "uint", "long", "bool"),
            new BinaryOperatorTestCase("<", "uint", "ulong", "bool"),
            new BinaryOperatorTestCase("<", "uint", "char", "bool"),
            new BinaryOperatorTestCase("<", "uint", "float", "bool"),
            new BinaryOperatorTestCase("<", "uint", "double", "bool"),
            new BinaryOperatorTestCase("<", "uint", "decimal", "bool"),
            new BinaryOperatorTestCase("<", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "long", "sbyte", "bool"),
            new BinaryOperatorTestCase("<", "long", "byte", "bool"),
            new BinaryOperatorTestCase("<", "long", "short", "bool"),
            new BinaryOperatorTestCase("<", "long", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "long", "int", "bool"),
            new BinaryOperatorTestCase("<", "long", "uint", "bool"),
            new BinaryOperatorTestCase("<", "long", "long", "bool"),
            new BinaryOperatorTestCase("<", "long", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("<", "long", "char", "bool"),
            new BinaryOperatorTestCase("<", "long", "float", "bool"),
            new BinaryOperatorTestCase("<", "long", "double", "bool"),
            new BinaryOperatorTestCase("<", "long", "decimal", "bool"),
            new BinaryOperatorTestCase("<", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "ulong", "sbyte", "#ambiguous"),
            new BinaryOperatorTestCase("<", "ulong", "byte", "bool"),
            new BinaryOperatorTestCase("<", "ulong", "short", "#ambiguous"),
            new BinaryOperatorTestCase("<", "ulong", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "ulong", "int", "#ambiguous"),
            new BinaryOperatorTestCase("<", "ulong", "uint", "bool"),
            new BinaryOperatorTestCase("<", "ulong", "long", "#ambiguous"),
            new BinaryOperatorTestCase("<", "ulong", "ulong", "bool"),
            new BinaryOperatorTestCase("<", "ulong", "char", "bool"),
            new BinaryOperatorTestCase("<", "ulong", "float", "bool"),
            new BinaryOperatorTestCase("<", "ulong", "double", "bool"),
            new BinaryOperatorTestCase("<", "ulong", "decimal", "bool"),
            new BinaryOperatorTestCase("<", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "char", "sbyte", "bool"),
            new BinaryOperatorTestCase("<", "char", "byte", "bool"),
            new BinaryOperatorTestCase("<", "char", "short", "bool"),
            new BinaryOperatorTestCase("<", "char", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "char", "int", "bool"),
            new BinaryOperatorTestCase("<", "char", "uint", "bool"),
            new BinaryOperatorTestCase("<", "char", "long", "bool"),
            new BinaryOperatorTestCase("<", "char", "ulong", "bool"),
            new BinaryOperatorTestCase("<", "char", "char", "bool"),
            new BinaryOperatorTestCase("<", "char", "float", "bool"),
            new BinaryOperatorTestCase("<", "char", "double", "bool"),
            new BinaryOperatorTestCase("<", "char", "decimal", "bool"),
            new BinaryOperatorTestCase("<", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "float", "sbyte", "bool"),
            new BinaryOperatorTestCase("<", "float", "byte", "bool"),
            new BinaryOperatorTestCase("<", "float", "short", "bool"),
            new BinaryOperatorTestCase("<", "float", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "float", "int", "bool"),
            new BinaryOperatorTestCase("<", "float", "uint", "bool"),
            new BinaryOperatorTestCase("<", "float", "long", "bool"),
            new BinaryOperatorTestCase("<", "float", "ulong", "bool"),
            new BinaryOperatorTestCase("<", "float", "char", "bool"),
            new BinaryOperatorTestCase("<", "float", "float", "bool"),
            new BinaryOperatorTestCase("<", "float", "double", "bool"),
            new BinaryOperatorTestCase("<", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "double", "sbyte", "bool"),
            new BinaryOperatorTestCase("<", "double", "byte", "bool"),
            new BinaryOperatorTestCase("<", "double", "short", "bool"),
            new BinaryOperatorTestCase("<", "double", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "double", "int", "bool"),
            new BinaryOperatorTestCase("<", "double", "uint", "bool"),
            new BinaryOperatorTestCase("<", "double", "long", "bool"),
            new BinaryOperatorTestCase("<", "double", "ulong", "bool"),
            new BinaryOperatorTestCase("<", "double", "char", "bool"),
            new BinaryOperatorTestCase("<", "double", "float", "bool"),
            new BinaryOperatorTestCase("<", "double", "double", "bool"),
            new BinaryOperatorTestCase("<", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "decimal", "sbyte", "bool"),
            new BinaryOperatorTestCase("<", "decimal", "byte", "bool"),
            new BinaryOperatorTestCase("<", "decimal", "short", "bool"),
            new BinaryOperatorTestCase("<", "decimal", "ushort", "bool"),
            new BinaryOperatorTestCase("<", "decimal", "int", "bool"),
            new BinaryOperatorTestCase("<", "decimal", "uint", "bool"),
            new BinaryOperatorTestCase("<", "decimal", "long", "bool"),
            new BinaryOperatorTestCase("<", "decimal", "ulong", "bool"),
            new BinaryOperatorTestCase("<", "decimal", "char", "bool"),
            new BinaryOperatorTestCase("<", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<", "decimal", "decimal", "bool"),
            new BinaryOperatorTestCase("<", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "sbyte", "sbyte", "bool"),
            new BinaryOperatorTestCase("<=", "sbyte", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "sbyte", "short", "bool"),
            new BinaryOperatorTestCase("<=", "sbyte", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "sbyte", "int", "bool"),
            new BinaryOperatorTestCase("<=", "sbyte", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "sbyte", "long", "bool"),
            new BinaryOperatorTestCase("<=", "sbyte", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("<=", "sbyte", "char", "bool"),
            new BinaryOperatorTestCase("<=", "sbyte", "float", "bool"),
            new BinaryOperatorTestCase("<=", "sbyte", "double", "bool"),
            new BinaryOperatorTestCase("<=", "sbyte", "decimal", "bool"),
            new BinaryOperatorTestCase("<=", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "byte", "sbyte", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "short", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "int", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "long", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "ulong", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "char", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "float", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "double", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "decimal", "bool"),
            new BinaryOperatorTestCase("<=", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "short", "sbyte", "bool"),
            new BinaryOperatorTestCase("<=", "short", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "short", "short", "bool"),
            new BinaryOperatorTestCase("<=", "short", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "short", "int", "bool"),
            new BinaryOperatorTestCase("<=", "short", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "short", "long", "bool"),
            new BinaryOperatorTestCase("<=", "short", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("<=", "short", "char", "bool"),
            new BinaryOperatorTestCase("<=", "short", "float", "bool"),
            new BinaryOperatorTestCase("<=", "short", "double", "bool"),
            new BinaryOperatorTestCase("<=", "short", "decimal", "bool"),
            new BinaryOperatorTestCase("<=", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "ushort", "sbyte", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "short", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "int", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "long", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "ulong", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "char", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "float", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "double", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "decimal", "bool"),
            new BinaryOperatorTestCase("<=", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "int", "sbyte", "bool"),
            new BinaryOperatorTestCase("<=", "int", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "int", "short", "bool"),
            new BinaryOperatorTestCase("<=", "int", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "int", "int", "bool"),
            new BinaryOperatorTestCase("<=", "int", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "int", "long", "bool"),
            new BinaryOperatorTestCase("<=", "int", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("<=", "int", "char", "bool"),
            new BinaryOperatorTestCase("<=", "int", "float", "bool"),
            new BinaryOperatorTestCase("<=", "int", "double", "bool"),
            new BinaryOperatorTestCase("<=", "int", "decimal", "bool"),
            new BinaryOperatorTestCase("<=", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "uint", "sbyte", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "short", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "int", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "long", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "ulong", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "char", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "float", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "double", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "decimal", "bool"),
            new BinaryOperatorTestCase("<=", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "long", "sbyte", "bool"),
            new BinaryOperatorTestCase("<=", "long", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "long", "short", "bool"),
            new BinaryOperatorTestCase("<=", "long", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "long", "int", "bool"),
            new BinaryOperatorTestCase("<=", "long", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "long", "long", "bool"),
            new BinaryOperatorTestCase("<=", "long", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase("<=", "long", "char", "bool"),
            new BinaryOperatorTestCase("<=", "long", "float", "bool"),
            new BinaryOperatorTestCase("<=", "long", "double", "bool"),
            new BinaryOperatorTestCase("<=", "long", "decimal", "bool"),
            new BinaryOperatorTestCase("<=", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "ulong", "sbyte", "#ambiguous"),
            new BinaryOperatorTestCase("<=", "ulong", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "ulong", "short", "#ambiguous"),
            new BinaryOperatorTestCase("<=", "ulong", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "ulong", "int", "#ambiguous"),
            new BinaryOperatorTestCase("<=", "ulong", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "ulong", "long", "#ambiguous"),
            new BinaryOperatorTestCase("<=", "ulong", "ulong", "bool"),
            new BinaryOperatorTestCase("<=", "ulong", "char", "bool"),
            new BinaryOperatorTestCase("<=", "ulong", "float", "bool"),
            new BinaryOperatorTestCase("<=", "ulong", "double", "bool"),
            new BinaryOperatorTestCase("<=", "ulong", "decimal", "bool"),
            new BinaryOperatorTestCase("<=", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "char", "sbyte", "bool"),
            new BinaryOperatorTestCase("<=", "char", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "char", "short", "bool"),
            new BinaryOperatorTestCase("<=", "char", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "char", "int", "bool"),
            new BinaryOperatorTestCase("<=", "char", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "char", "long", "bool"),
            new BinaryOperatorTestCase("<=", "char", "ulong", "bool"),
            new BinaryOperatorTestCase("<=", "char", "char", "bool"),
            new BinaryOperatorTestCase("<=", "char", "float", "bool"),
            new BinaryOperatorTestCase("<=", "char", "double", "bool"),
            new BinaryOperatorTestCase("<=", "char", "decimal", "bool"),
            new BinaryOperatorTestCase("<=", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "float", "sbyte", "bool"),
            new BinaryOperatorTestCase("<=", "float", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "float", "short", "bool"),
            new BinaryOperatorTestCase("<=", "float", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "float", "int", "bool"),
            new BinaryOperatorTestCase("<=", "float", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "float", "long", "bool"),
            new BinaryOperatorTestCase("<=", "float", "ulong", "bool"),
            new BinaryOperatorTestCase("<=", "float", "char", "bool"),
            new BinaryOperatorTestCase("<=", "float", "float", "bool"),
            new BinaryOperatorTestCase("<=", "float", "double", "bool"),
            new BinaryOperatorTestCase("<=", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "double", "sbyte", "bool"),
            new BinaryOperatorTestCase("<=", "double", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "double", "short", "bool"),
            new BinaryOperatorTestCase("<=", "double", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "double", "int", "bool"),
            new BinaryOperatorTestCase("<=", "double", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "double", "long", "bool"),
            new BinaryOperatorTestCase("<=", "double", "ulong", "bool"),
            new BinaryOperatorTestCase("<=", "double", "char", "bool"),
            new BinaryOperatorTestCase("<=", "double", "float", "bool"),
            new BinaryOperatorTestCase("<=", "double", "double", "bool"),
            new BinaryOperatorTestCase("<=", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "decimal", "sbyte", "bool"),
            new BinaryOperatorTestCase("<=", "decimal", "byte", "bool"),
            new BinaryOperatorTestCase("<=", "decimal", "short", "bool"),
            new BinaryOperatorTestCase("<=", "decimal", "ushort", "bool"),
            new BinaryOperatorTestCase("<=", "decimal", "int", "bool"),
            new BinaryOperatorTestCase("<=", "decimal", "uint", "bool"),
            new BinaryOperatorTestCase("<=", "decimal", "long", "bool"),
            new BinaryOperatorTestCase("<=", "decimal", "ulong", "bool"),
            new BinaryOperatorTestCase("<=", "decimal", "char", "bool"),
            new BinaryOperatorTestCase("<=", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "decimal", "decimal", "bool"),
            new BinaryOperatorTestCase("<=", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<=", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "sbyte", "sbyte", "bool"),
            new BinaryOperatorTestCase(">", "sbyte", "byte", "bool"),
            new BinaryOperatorTestCase(">", "sbyte", "short", "bool"),
            new BinaryOperatorTestCase(">", "sbyte", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "sbyte", "int", "bool"),
            new BinaryOperatorTestCase(">", "sbyte", "uint", "bool"),
            new BinaryOperatorTestCase(">", "sbyte", "long", "bool"),
            new BinaryOperatorTestCase(">", "sbyte", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase(">", "sbyte", "char", "bool"),
            new BinaryOperatorTestCase(">", "sbyte", "float", "bool"),
            new BinaryOperatorTestCase(">", "sbyte", "double", "bool"),
            new BinaryOperatorTestCase(">", "sbyte", "decimal", "bool"),
            new BinaryOperatorTestCase(">", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "byte", "sbyte", "bool"),
            new BinaryOperatorTestCase(">", "byte", "byte", "bool"),
            new BinaryOperatorTestCase(">", "byte", "short", "bool"),
            new BinaryOperatorTestCase(">", "byte", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "byte", "int", "bool"),
            new BinaryOperatorTestCase(">", "byte", "uint", "bool"),
            new BinaryOperatorTestCase(">", "byte", "long", "bool"),
            new BinaryOperatorTestCase(">", "byte", "ulong", "bool"),
            new BinaryOperatorTestCase(">", "byte", "char", "bool"),
            new BinaryOperatorTestCase(">", "byte", "float", "bool"),
            new BinaryOperatorTestCase(">", "byte", "double", "bool"),
            new BinaryOperatorTestCase(">", "byte", "decimal", "bool"),
            new BinaryOperatorTestCase(">", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "short", "sbyte", "bool"),
            new BinaryOperatorTestCase(">", "short", "byte", "bool"),
            new BinaryOperatorTestCase(">", "short", "short", "bool"),
            new BinaryOperatorTestCase(">", "short", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "short", "int", "bool"),
            new BinaryOperatorTestCase(">", "short", "uint", "bool"),
            new BinaryOperatorTestCase(">", "short", "long", "bool"),
            new BinaryOperatorTestCase(">", "short", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase(">", "short", "char", "bool"),
            new BinaryOperatorTestCase(">", "short", "float", "bool"),
            new BinaryOperatorTestCase(">", "short", "double", "bool"),
            new BinaryOperatorTestCase(">", "short", "decimal", "bool"),
            new BinaryOperatorTestCase(">", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "ushort", "sbyte", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "byte", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "short", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "int", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "uint", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "long", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "ulong", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "char", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "float", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "double", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "decimal", "bool"),
            new BinaryOperatorTestCase(">", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "int", "sbyte", "bool"),
            new BinaryOperatorTestCase(">", "int", "byte", "bool"),
            new BinaryOperatorTestCase(">", "int", "short", "bool"),
            new BinaryOperatorTestCase(">", "int", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "int", "int", "bool"),
            new BinaryOperatorTestCase(">", "int", "uint", "bool"),
            new BinaryOperatorTestCase(">", "int", "long", "bool"),
            new BinaryOperatorTestCase(">", "int", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase(">", "int", "char", "bool"),
            new BinaryOperatorTestCase(">", "int", "float", "bool"),
            new BinaryOperatorTestCase(">", "int", "double", "bool"),
            new BinaryOperatorTestCase(">", "int", "decimal", "bool"),
            new BinaryOperatorTestCase(">", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "uint", "sbyte", "bool"),
            new BinaryOperatorTestCase(">", "uint", "byte", "bool"),
            new BinaryOperatorTestCase(">", "uint", "short", "bool"),
            new BinaryOperatorTestCase(">", "uint", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "uint", "int", "bool"),
            new BinaryOperatorTestCase(">", "uint", "uint", "bool"),
            new BinaryOperatorTestCase(">", "uint", "long", "bool"),
            new BinaryOperatorTestCase(">", "uint", "ulong", "bool"),
            new BinaryOperatorTestCase(">", "uint", "char", "bool"),
            new BinaryOperatorTestCase(">", "uint", "float", "bool"),
            new BinaryOperatorTestCase(">", "uint", "double", "bool"),
            new BinaryOperatorTestCase(">", "uint", "decimal", "bool"),
            new BinaryOperatorTestCase(">", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "long", "sbyte", "bool"),
            new BinaryOperatorTestCase(">", "long", "byte", "bool"),
            new BinaryOperatorTestCase(">", "long", "short", "bool"),
            new BinaryOperatorTestCase(">", "long", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "long", "int", "bool"),
            new BinaryOperatorTestCase(">", "long", "uint", "bool"),
            new BinaryOperatorTestCase(">", "long", "long", "bool"),
            new BinaryOperatorTestCase(">", "long", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase(">", "long", "char", "bool"),
            new BinaryOperatorTestCase(">", "long", "float", "bool"),
            new BinaryOperatorTestCase(">", "long", "double", "bool"),
            new BinaryOperatorTestCase(">", "long", "decimal", "bool"),
            new BinaryOperatorTestCase(">", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "ulong", "sbyte", "#ambiguous"),
            new BinaryOperatorTestCase(">", "ulong", "byte", "bool"),
            new BinaryOperatorTestCase(">", "ulong", "short", "#ambiguous"),
            new BinaryOperatorTestCase(">", "ulong", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "ulong", "int", "#ambiguous"),
            new BinaryOperatorTestCase(">", "ulong", "uint", "bool"),
            new BinaryOperatorTestCase(">", "ulong", "long", "#ambiguous"),
            new BinaryOperatorTestCase(">", "ulong", "ulong", "bool"),
            new BinaryOperatorTestCase(">", "ulong", "char", "bool"),
            new BinaryOperatorTestCase(">", "ulong", "float", "bool"),
            new BinaryOperatorTestCase(">", "ulong", "double", "bool"),
            new BinaryOperatorTestCase(">", "ulong", "decimal", "bool"),
            new BinaryOperatorTestCase(">", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "char", "sbyte", "bool"),
            new BinaryOperatorTestCase(">", "char", "byte", "bool"),
            new BinaryOperatorTestCase(">", "char", "short", "bool"),
            new BinaryOperatorTestCase(">", "char", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "char", "int", "bool"),
            new BinaryOperatorTestCase(">", "char", "uint", "bool"),
            new BinaryOperatorTestCase(">", "char", "long", "bool"),
            new BinaryOperatorTestCase(">", "char", "ulong", "bool"),
            new BinaryOperatorTestCase(">", "char", "char", "bool"),
            new BinaryOperatorTestCase(">", "char", "float", "bool"),
            new BinaryOperatorTestCase(">", "char", "double", "bool"),
            new BinaryOperatorTestCase(">", "char", "decimal", "bool"),
            new BinaryOperatorTestCase(">", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "float", "sbyte", "bool"),
            new BinaryOperatorTestCase(">", "float", "byte", "bool"),
            new BinaryOperatorTestCase(">", "float", "short", "bool"),
            new BinaryOperatorTestCase(">", "float", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "float", "int", "bool"),
            new BinaryOperatorTestCase(">", "float", "uint", "bool"),
            new BinaryOperatorTestCase(">", "float", "long", "bool"),
            new BinaryOperatorTestCase(">", "float", "ulong", "bool"),
            new BinaryOperatorTestCase(">", "float", "char", "bool"),
            new BinaryOperatorTestCase(">", "float", "float", "bool"),
            new BinaryOperatorTestCase(">", "float", "double", "bool"),
            new BinaryOperatorTestCase(">", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "double", "sbyte", "bool"),
            new BinaryOperatorTestCase(">", "double", "byte", "bool"),
            new BinaryOperatorTestCase(">", "double", "short", "bool"),
            new BinaryOperatorTestCase(">", "double", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "double", "int", "bool"),
            new BinaryOperatorTestCase(">", "double", "uint", "bool"),
            new BinaryOperatorTestCase(">", "double", "long", "bool"),
            new BinaryOperatorTestCase(">", "double", "ulong", "bool"),
            new BinaryOperatorTestCase(">", "double", "char", "bool"),
            new BinaryOperatorTestCase(">", "double", "float", "bool"),
            new BinaryOperatorTestCase(">", "double", "double", "bool"),
            new BinaryOperatorTestCase(">", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "decimal", "sbyte", "bool"),
            new BinaryOperatorTestCase(">", "decimal", "byte", "bool"),
            new BinaryOperatorTestCase(">", "decimal", "short", "bool"),
            new BinaryOperatorTestCase(">", "decimal", "ushort", "bool"),
            new BinaryOperatorTestCase(">", "decimal", "int", "bool"),
            new BinaryOperatorTestCase(">", "decimal", "uint", "bool"),
            new BinaryOperatorTestCase(">", "decimal", "long", "bool"),
            new BinaryOperatorTestCase(">", "decimal", "ulong", "bool"),
            new BinaryOperatorTestCase(">", "decimal", "char", "bool"),
            new BinaryOperatorTestCase(">", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">", "decimal", "decimal", "bool"),
            new BinaryOperatorTestCase(">", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "sbyte", "sbyte", "bool"),
            new BinaryOperatorTestCase(">=", "sbyte", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "sbyte", "short", "bool"),
            new BinaryOperatorTestCase(">=", "sbyte", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "sbyte", "int", "bool"),
            new BinaryOperatorTestCase(">=", "sbyte", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "sbyte", "long", "bool"),
            new BinaryOperatorTestCase(">=", "sbyte", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase(">=", "sbyte", "char", "bool"),
            new BinaryOperatorTestCase(">=", "sbyte", "float", "bool"),
            new BinaryOperatorTestCase(">=", "sbyte", "double", "bool"),
            new BinaryOperatorTestCase(">=", "sbyte", "decimal", "bool"),
            new BinaryOperatorTestCase(">=", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "byte", "sbyte", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "short", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "int", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "long", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "ulong", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "char", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "float", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "double", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "decimal", "bool"),
            new BinaryOperatorTestCase(">=", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "short", "sbyte", "bool"),
            new BinaryOperatorTestCase(">=", "short", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "short", "short", "bool"),
            new BinaryOperatorTestCase(">=", "short", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "short", "int", "bool"),
            new BinaryOperatorTestCase(">=", "short", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "short", "long", "bool"),
            new BinaryOperatorTestCase(">=", "short", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase(">=", "short", "char", "bool"),
            new BinaryOperatorTestCase(">=", "short", "float", "bool"),
            new BinaryOperatorTestCase(">=", "short", "double", "bool"),
            new BinaryOperatorTestCase(">=", "short", "decimal", "bool"),
            new BinaryOperatorTestCase(">=", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "ushort", "sbyte", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "short", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "int", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "long", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "ulong", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "char", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "float", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "double", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "decimal", "bool"),
            new BinaryOperatorTestCase(">=", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "int", "sbyte", "bool"),
            new BinaryOperatorTestCase(">=", "int", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "int", "short", "bool"),
            new BinaryOperatorTestCase(">=", "int", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "int", "int", "bool"),
            new BinaryOperatorTestCase(">=", "int", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "int", "long", "bool"),
            new BinaryOperatorTestCase(">=", "int", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase(">=", "int", "char", "bool"),
            new BinaryOperatorTestCase(">=", "int", "float", "bool"),
            new BinaryOperatorTestCase(">=", "int", "double", "bool"),
            new BinaryOperatorTestCase(">=", "int", "decimal", "bool"),
            new BinaryOperatorTestCase(">=", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "uint", "sbyte", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "short", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "int", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "long", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "ulong", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "char", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "float", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "double", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "decimal", "bool"),
            new BinaryOperatorTestCase(">=", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "long", "sbyte", "bool"),
            new BinaryOperatorTestCase(">=", "long", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "long", "short", "bool"),
            new BinaryOperatorTestCase(">=", "long", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "long", "int", "bool"),
            new BinaryOperatorTestCase(">=", "long", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "long", "long", "bool"),
            new BinaryOperatorTestCase(">=", "long", "ulong", "#ambiguous"),
            new BinaryOperatorTestCase(">=", "long", "char", "bool"),
            new BinaryOperatorTestCase(">=", "long", "float", "bool"),
            new BinaryOperatorTestCase(">=", "long", "double", "bool"),
            new BinaryOperatorTestCase(">=", "long", "decimal", "bool"),
            new BinaryOperatorTestCase(">=", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "ulong", "sbyte", "#ambiguous"),
            new BinaryOperatorTestCase(">=", "ulong", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "ulong", "short", "#ambiguous"),
            new BinaryOperatorTestCase(">=", "ulong", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "ulong", "int", "#ambiguous"),
            new BinaryOperatorTestCase(">=", "ulong", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "ulong", "long", "#ambiguous"),
            new BinaryOperatorTestCase(">=", "ulong", "ulong", "bool"),
            new BinaryOperatorTestCase(">=", "ulong", "char", "bool"),
            new BinaryOperatorTestCase(">=", "ulong", "float", "bool"),
            new BinaryOperatorTestCase(">=", "ulong", "double", "bool"),
            new BinaryOperatorTestCase(">=", "ulong", "decimal", "bool"),
            new BinaryOperatorTestCase(">=", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "char", "sbyte", "bool"),
            new BinaryOperatorTestCase(">=", "char", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "char", "short", "bool"),
            new BinaryOperatorTestCase(">=", "char", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "char", "int", "bool"),
            new BinaryOperatorTestCase(">=", "char", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "char", "long", "bool"),
            new BinaryOperatorTestCase(">=", "char", "ulong", "bool"),
            new BinaryOperatorTestCase(">=", "char", "char", "bool"),
            new BinaryOperatorTestCase(">=", "char", "float", "bool"),
            new BinaryOperatorTestCase(">=", "char", "double", "bool"),
            new BinaryOperatorTestCase(">=", "char", "decimal", "bool"),
            new BinaryOperatorTestCase(">=", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "float", "sbyte", "bool"),
            new BinaryOperatorTestCase(">=", "float", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "float", "short", "bool"),
            new BinaryOperatorTestCase(">=", "float", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "float", "int", "bool"),
            new BinaryOperatorTestCase(">=", "float", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "float", "long", "bool"),
            new BinaryOperatorTestCase(">=", "float", "ulong", "bool"),
            new BinaryOperatorTestCase(">=", "float", "char", "bool"),
            new BinaryOperatorTestCase(">=", "float", "float", "bool"),
            new BinaryOperatorTestCase(">=", "float", "double", "bool"),
            new BinaryOperatorTestCase(">=", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "double", "sbyte", "bool"),
            new BinaryOperatorTestCase(">=", "double", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "double", "short", "bool"),
            new BinaryOperatorTestCase(">=", "double", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "double", "int", "bool"),
            new BinaryOperatorTestCase(">=", "double", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "double", "long", "bool"),
            new BinaryOperatorTestCase(">=", "double", "ulong", "bool"),
            new BinaryOperatorTestCase(">=", "double", "char", "bool"),
            new BinaryOperatorTestCase(">=", "double", "float", "bool"),
            new BinaryOperatorTestCase(">=", "double", "double", "bool"),
            new BinaryOperatorTestCase(">=", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "decimal", "sbyte", "bool"),
            new BinaryOperatorTestCase(">=", "decimal", "byte", "bool"),
            new BinaryOperatorTestCase(">=", "decimal", "short", "bool"),
            new BinaryOperatorTestCase(">=", "decimal", "ushort", "bool"),
            new BinaryOperatorTestCase(">=", "decimal", "int", "bool"),
            new BinaryOperatorTestCase(">=", "decimal", "uint", "bool"),
            new BinaryOperatorTestCase(">=", "decimal", "long", "bool"),
            new BinaryOperatorTestCase(">=", "decimal", "ulong", "bool"),
            new BinaryOperatorTestCase(">=", "decimal", "char", "bool"),
            new BinaryOperatorTestCase(">=", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "decimal", "decimal", "bool"),
            new BinaryOperatorTestCase(">=", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">=", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "sbyte", "sbyte", "int"),
            new BinaryOperatorTestCase("^", "sbyte", "byte", "int"),
            new BinaryOperatorTestCase("^", "sbyte", "short", "int"),
            new BinaryOperatorTestCase("^", "sbyte", "ushort", "int"),
            new BinaryOperatorTestCase("^", "sbyte", "int", "int"),
            new BinaryOperatorTestCase("^", "sbyte", "uint", "long"),
            new BinaryOperatorTestCase("^", "sbyte", "long", "long"),
            new BinaryOperatorTestCase("^", "sbyte", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("^", "sbyte", "char", "int"),
            new BinaryOperatorTestCase("^", "sbyte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "sbyte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "sbyte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "byte", "sbyte", "int"),
            new BinaryOperatorTestCase("^", "byte", "byte", "int"),
            new BinaryOperatorTestCase("^", "byte", "short", "int"),
            new BinaryOperatorTestCase("^", "byte", "ushort", "int"),
            new BinaryOperatorTestCase("^", "byte", "int", "int"),
            new BinaryOperatorTestCase("^", "byte", "uint", "uint"),
            new BinaryOperatorTestCase("^", "byte", "long", "long"),
            new BinaryOperatorTestCase("^", "byte", "ulong", "ulong"),
            new BinaryOperatorTestCase("^", "byte", "char", "int"),
            new BinaryOperatorTestCase("^", "byte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "byte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "byte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "short", "sbyte", "int"),
            new BinaryOperatorTestCase("^", "short", "byte", "int"),
            new BinaryOperatorTestCase("^", "short", "short", "int"),
            new BinaryOperatorTestCase("^", "short", "ushort", "int"),
            new BinaryOperatorTestCase("^", "short", "int", "int"),
            new BinaryOperatorTestCase("^", "short", "uint", "long"),
            new BinaryOperatorTestCase("^", "short", "long", "long"),
            new BinaryOperatorTestCase("^", "short", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("^", "short", "char", "int"),
            new BinaryOperatorTestCase("^", "short", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "short", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "short", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ushort", "sbyte", "int"),
            new BinaryOperatorTestCase("^", "ushort", "byte", "int"),
            new BinaryOperatorTestCase("^", "ushort", "short", "int"),
            new BinaryOperatorTestCase("^", "ushort", "ushort", "int"),
            new BinaryOperatorTestCase("^", "ushort", "int", "int"),
            new BinaryOperatorTestCase("^", "ushort", "uint", "uint"),
            new BinaryOperatorTestCase("^", "ushort", "long", "long"),
            new BinaryOperatorTestCase("^", "ushort", "ulong", "ulong"),
            new BinaryOperatorTestCase("^", "ushort", "char", "int"),
            new BinaryOperatorTestCase("^", "ushort", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ushort", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ushort", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "int", "sbyte", "int"),
            new BinaryOperatorTestCase("^", "int", "byte", "int"),
            new BinaryOperatorTestCase("^", "int", "short", "int"),
            new BinaryOperatorTestCase("^", "int", "ushort", "int"),
            new BinaryOperatorTestCase("^", "int", "int", "int"),
            new BinaryOperatorTestCase("^", "int", "uint", "long"),
            new BinaryOperatorTestCase("^", "int", "long", "long"),
            new BinaryOperatorTestCase("^", "int", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("^", "int", "char", "int"),
            new BinaryOperatorTestCase("^", "int", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "int", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "int", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "uint", "sbyte", "long"),
            new BinaryOperatorTestCase("^", "uint", "byte", "uint"),
            new BinaryOperatorTestCase("^", "uint", "short", "long"),
            new BinaryOperatorTestCase("^", "uint", "ushort", "uint"),
            new BinaryOperatorTestCase("^", "uint", "int", "long"),
            new BinaryOperatorTestCase("^", "uint", "uint", "uint"),
            new BinaryOperatorTestCase("^", "uint", "long", "long"),
            new BinaryOperatorTestCase("^", "uint", "ulong", "ulong"),
            new BinaryOperatorTestCase("^", "uint", "char", "uint"),
            new BinaryOperatorTestCase("^", "uint", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "uint", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "uint", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "long", "sbyte", "long"),
            new BinaryOperatorTestCase("^", "long", "byte", "long"),
            new BinaryOperatorTestCase("^", "long", "short", "long"),
            new BinaryOperatorTestCase("^", "long", "ushort", "long"),
            new BinaryOperatorTestCase("^", "long", "int", "long"),
            new BinaryOperatorTestCase("^", "long", "uint", "long"),
            new BinaryOperatorTestCase("^", "long", "long", "long"),
            new BinaryOperatorTestCase("^", "long", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("^", "long", "char", "long"),
            new BinaryOperatorTestCase("^", "long", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "long", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "long", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ulong", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ulong", "byte", "ulong"),
            new BinaryOperatorTestCase("^", "ulong", "short", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ulong", "ushort", "ulong"),
            new BinaryOperatorTestCase("^", "ulong", "int", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ulong", "uint", "ulong"),
            new BinaryOperatorTestCase("^", "ulong", "long", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ulong", "ulong", "ulong"),
            new BinaryOperatorTestCase("^", "ulong", "char", "ulong"),
            new BinaryOperatorTestCase("^", "ulong", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ulong", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ulong", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "char", "sbyte", "int"),
            new BinaryOperatorTestCase("^", "char", "byte", "int"),
            new BinaryOperatorTestCase("^", "char", "short", "int"),
            new BinaryOperatorTestCase("^", "char", "ushort", "int"),
            new BinaryOperatorTestCase("^", "char", "int", "int"),
            new BinaryOperatorTestCase("^", "char", "uint", "uint"),
            new BinaryOperatorTestCase("^", "char", "long", "long"),
            new BinaryOperatorTestCase("^", "char", "ulong", "ulong"),
            new BinaryOperatorTestCase("^", "char", "char", "int"),
            new BinaryOperatorTestCase("^", "char", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "char", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "char", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "short", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "int", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "long", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "char", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "short", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "int", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "long", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "char", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "short", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "int", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "long", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "char", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "bool", "bool"),
            new BinaryOperatorTestCase("^", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("^", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "sbyte", "sbyte", "int"),
            new BinaryOperatorTestCase("&", "sbyte", "byte", "int"),
            new BinaryOperatorTestCase("&", "sbyte", "short", "int"),
            new BinaryOperatorTestCase("&", "sbyte", "ushort", "int"),
            new BinaryOperatorTestCase("&", "sbyte", "int", "int"),
            new BinaryOperatorTestCase("&", "sbyte", "uint", "long"),
            new BinaryOperatorTestCase("&", "sbyte", "long", "long"),
            new BinaryOperatorTestCase("&", "sbyte", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("&", "sbyte", "char", "int"),
            new BinaryOperatorTestCase("&", "sbyte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "sbyte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "sbyte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "byte", "sbyte", "int"),
            new BinaryOperatorTestCase("&", "byte", "byte", "int"),
            new BinaryOperatorTestCase("&", "byte", "short", "int"),
            new BinaryOperatorTestCase("&", "byte", "ushort", "int"),
            new BinaryOperatorTestCase("&", "byte", "int", "int"),
            new BinaryOperatorTestCase("&", "byte", "uint", "uint"),
            new BinaryOperatorTestCase("&", "byte", "long", "long"),
            new BinaryOperatorTestCase("&", "byte", "ulong", "ulong"),
            new BinaryOperatorTestCase("&", "byte", "char", "int"),
            new BinaryOperatorTestCase("&", "byte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "byte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "byte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "short", "sbyte", "int"),
            new BinaryOperatorTestCase("&", "short", "byte", "int"),
            new BinaryOperatorTestCase("&", "short", "short", "int"),
            new BinaryOperatorTestCase("&", "short", "ushort", "int"),
            new BinaryOperatorTestCase("&", "short", "int", "int"),
            new BinaryOperatorTestCase("&", "short", "uint", "long"),
            new BinaryOperatorTestCase("&", "short", "long", "long"),
            new BinaryOperatorTestCase("&", "short", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("&", "short", "char", "int"),
            new BinaryOperatorTestCase("&", "short", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "short", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "short", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ushort", "sbyte", "int"),
            new BinaryOperatorTestCase("&", "ushort", "byte", "int"),
            new BinaryOperatorTestCase("&", "ushort", "short", "int"),
            new BinaryOperatorTestCase("&", "ushort", "ushort", "int"),
            new BinaryOperatorTestCase("&", "ushort", "int", "int"),
            new BinaryOperatorTestCase("&", "ushort", "uint", "uint"),
            new BinaryOperatorTestCase("&", "ushort", "long", "long"),
            new BinaryOperatorTestCase("&", "ushort", "ulong", "ulong"),
            new BinaryOperatorTestCase("&", "ushort", "char", "int"),
            new BinaryOperatorTestCase("&", "ushort", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ushort", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ushort", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "int", "sbyte", "int"),
            new BinaryOperatorTestCase("&", "int", "byte", "int"),
            new BinaryOperatorTestCase("&", "int", "short", "int"),
            new BinaryOperatorTestCase("&", "int", "ushort", "int"),
            new BinaryOperatorTestCase("&", "int", "int", "int"),
            new BinaryOperatorTestCase("&", "int", "uint", "long"),
            new BinaryOperatorTestCase("&", "int", "long", "long"),
            new BinaryOperatorTestCase("&", "int", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("&", "int", "char", "int"),
            new BinaryOperatorTestCase("&", "int", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "int", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "int", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "uint", "sbyte", "long"),
            new BinaryOperatorTestCase("&", "uint", "byte", "uint"),
            new BinaryOperatorTestCase("&", "uint", "short", "long"),
            new BinaryOperatorTestCase("&", "uint", "ushort", "uint"),
            new BinaryOperatorTestCase("&", "uint", "int", "long"),
            new BinaryOperatorTestCase("&", "uint", "uint", "uint"),
            new BinaryOperatorTestCase("&", "uint", "long", "long"),
            new BinaryOperatorTestCase("&", "uint", "ulong", "ulong"),
            new BinaryOperatorTestCase("&", "uint", "char", "uint"),
            new BinaryOperatorTestCase("&", "uint", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "uint", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "uint", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "long", "sbyte", "long"),
            new BinaryOperatorTestCase("&", "long", "byte", "long"),
            new BinaryOperatorTestCase("&", "long", "short", "long"),
            new BinaryOperatorTestCase("&", "long", "ushort", "long"),
            new BinaryOperatorTestCase("&", "long", "int", "long"),
            new BinaryOperatorTestCase("&", "long", "uint", "long"),
            new BinaryOperatorTestCase("&", "long", "long", "long"),
            new BinaryOperatorTestCase("&", "long", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("&", "long", "char", "long"),
            new BinaryOperatorTestCase("&", "long", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "long", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "long", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ulong", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ulong", "byte", "ulong"),
            new BinaryOperatorTestCase("&", "ulong", "short", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ulong", "ushort", "ulong"),
            new BinaryOperatorTestCase("&", "ulong", "int", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ulong", "uint", "ulong"),
            new BinaryOperatorTestCase("&", "ulong", "long", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ulong", "ulong", "ulong"),
            new BinaryOperatorTestCase("&", "ulong", "char", "ulong"),
            new BinaryOperatorTestCase("&", "ulong", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ulong", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ulong", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "char", "sbyte", "int"),
            new BinaryOperatorTestCase("&", "char", "byte", "int"),
            new BinaryOperatorTestCase("&", "char", "short", "int"),
            new BinaryOperatorTestCase("&", "char", "ushort", "int"),
            new BinaryOperatorTestCase("&", "char", "int", "int"),
            new BinaryOperatorTestCase("&", "char", "uint", "uint"),
            new BinaryOperatorTestCase("&", "char", "long", "long"),
            new BinaryOperatorTestCase("&", "char", "ulong", "ulong"),
            new BinaryOperatorTestCase("&", "char", "char", "int"),
            new BinaryOperatorTestCase("&", "char", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "char", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "char", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "short", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "int", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "long", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "char", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "short", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "int", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "long", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "char", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "short", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "int", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "long", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "char", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "bool", "bool"),
            new BinaryOperatorTestCase("&", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("&", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "sbyte", "sbyte", "int"),
            new BinaryOperatorTestCase("|", "sbyte", "byte", "int"),
            new BinaryOperatorTestCase("|", "sbyte", "short", "int"),
            new BinaryOperatorTestCase("|", "sbyte", "ushort", "int"),
            new BinaryOperatorTestCase("|", "sbyte", "int", "int"),
            new BinaryOperatorTestCase("|", "sbyte", "uint", "long"),
            new BinaryOperatorTestCase("|", "sbyte", "long", "long"),
            new BinaryOperatorTestCase("|", "sbyte", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("|", "sbyte", "char", "int"),
            new BinaryOperatorTestCase("|", "sbyte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "sbyte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "sbyte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "byte", "sbyte", "int"),
            new BinaryOperatorTestCase("|", "byte", "byte", "int"),
            new BinaryOperatorTestCase("|", "byte", "short", "int"),
            new BinaryOperatorTestCase("|", "byte", "ushort", "int"),
            new BinaryOperatorTestCase("|", "byte", "int", "int"),
            new BinaryOperatorTestCase("|", "byte", "uint", "uint"),
            new BinaryOperatorTestCase("|", "byte", "long", "long"),
            new BinaryOperatorTestCase("|", "byte", "ulong", "ulong"),
            new BinaryOperatorTestCase("|", "byte", "char", "int"),
            new BinaryOperatorTestCase("|", "byte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "byte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "byte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "short", "sbyte", "int"),
            new BinaryOperatorTestCase("|", "short", "byte", "int"),
            new BinaryOperatorTestCase("|", "short", "short", "int"),
            new BinaryOperatorTestCase("|", "short", "ushort", "int"),
            new BinaryOperatorTestCase("|", "short", "int", "int"),
            new BinaryOperatorTestCase("|", "short", "uint", "long"),
            new BinaryOperatorTestCase("|", "short", "long", "long"),
            new BinaryOperatorTestCase("|", "short", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("|", "short", "char", "int"),
            new BinaryOperatorTestCase("|", "short", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "short", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "short", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ushort", "sbyte", "int"),
            new BinaryOperatorTestCase("|", "ushort", "byte", "int"),
            new BinaryOperatorTestCase("|", "ushort", "short", "int"),
            new BinaryOperatorTestCase("|", "ushort", "ushort", "int"),
            new BinaryOperatorTestCase("|", "ushort", "int", "int"),
            new BinaryOperatorTestCase("|", "ushort", "uint", "uint"),
            new BinaryOperatorTestCase("|", "ushort", "long", "long"),
            new BinaryOperatorTestCase("|", "ushort", "ulong", "ulong"),
            new BinaryOperatorTestCase("|", "ushort", "char", "int"),
            new BinaryOperatorTestCase("|", "ushort", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ushort", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ushort", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "int", "sbyte", "int"),
            new BinaryOperatorTestCase("|", "int", "byte", "int"),
            new BinaryOperatorTestCase("|", "int", "short", "int"),
            new BinaryOperatorTestCase("|", "int", "ushort", "int"),
            new BinaryOperatorTestCase("|", "int", "int", "int"),
            new BinaryOperatorTestCase("|", "int", "uint", "long"),
            new BinaryOperatorTestCase("|", "int", "long", "long"),
            new BinaryOperatorTestCase("|", "int", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("|", "int", "char", "int"),
            new BinaryOperatorTestCase("|", "int", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "int", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "int", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "uint", "sbyte", "long"),
            new BinaryOperatorTestCase("|", "uint", "byte", "uint"),
            new BinaryOperatorTestCase("|", "uint", "short", "long"),
            new BinaryOperatorTestCase("|", "uint", "ushort", "uint"),
            new BinaryOperatorTestCase("|", "uint", "int", "long"),
            new BinaryOperatorTestCase("|", "uint", "uint", "uint"),
            new BinaryOperatorTestCase("|", "uint", "long", "long"),
            new BinaryOperatorTestCase("|", "uint", "ulong", "ulong"),
            new BinaryOperatorTestCase("|", "uint", "char", "uint"),
            new BinaryOperatorTestCase("|", "uint", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "uint", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "uint", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "long", "sbyte", "long"),
            new BinaryOperatorTestCase("|", "long", "byte", "long"),
            new BinaryOperatorTestCase("|", "long", "short", "long"),
            new BinaryOperatorTestCase("|", "long", "ushort", "long"),
            new BinaryOperatorTestCase("|", "long", "int", "long"),
            new BinaryOperatorTestCase("|", "long", "uint", "long"),
            new BinaryOperatorTestCase("|", "long", "long", "long"),
            new BinaryOperatorTestCase("|", "long", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("|", "long", "char", "long"),
            new BinaryOperatorTestCase("|", "long", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "long", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "long", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ulong", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ulong", "byte", "ulong"),
            new BinaryOperatorTestCase("|", "ulong", "short", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ulong", "ushort", "ulong"),
            new BinaryOperatorTestCase("|", "ulong", "int", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ulong", "uint", "ulong"),
            new BinaryOperatorTestCase("|", "ulong", "long", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ulong", "ulong", "ulong"),
            new BinaryOperatorTestCase("|", "ulong", "char", "ulong"),
            new BinaryOperatorTestCase("|", "ulong", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ulong", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ulong", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "char", "sbyte", "int"),
            new BinaryOperatorTestCase("|", "char", "byte", "int"),
            new BinaryOperatorTestCase("|", "char", "short", "int"),
            new BinaryOperatorTestCase("|", "char", "ushort", "int"),
            new BinaryOperatorTestCase("|", "char", "int", "int"),
            new BinaryOperatorTestCase("|", "char", "uint", "uint"),
            new BinaryOperatorTestCase("|", "char", "long", "long"),
            new BinaryOperatorTestCase("|", "char", "ulong", "ulong"),
            new BinaryOperatorTestCase("|", "char", "char", "int"),
            new BinaryOperatorTestCase("|", "char", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "char", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "char", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "short", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "int", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "long", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "char", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "short", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "int", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "long", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "char", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "short", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "int", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "long", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "char", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "bool", "bool"),
            new BinaryOperatorTestCase("|", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("|", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "sbyte", "sbyte", "int"),
            new BinaryOperatorTestCase("<<", "sbyte", "byte", "int"),
            new BinaryOperatorTestCase("<<", "sbyte", "short", "int"),
            new BinaryOperatorTestCase("<<", "sbyte", "ushort", "int"),
            new BinaryOperatorTestCase("<<", "sbyte", "int", "int"),
            new BinaryOperatorTestCase("<<", "sbyte", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "sbyte", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "sbyte", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "sbyte", "char", "int"),
            new BinaryOperatorTestCase("<<", "sbyte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "sbyte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "sbyte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "byte", "sbyte", "int"),
            new BinaryOperatorTestCase("<<", "byte", "byte", "int"),
            new BinaryOperatorTestCase("<<", "byte", "short", "int"),
            new BinaryOperatorTestCase("<<", "byte", "ushort", "int"),
            new BinaryOperatorTestCase("<<", "byte", "int", "int"),
            new BinaryOperatorTestCase("<<", "byte", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "byte", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "byte", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "byte", "char", "int"),
            new BinaryOperatorTestCase("<<", "byte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "byte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "byte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "short", "sbyte", "int"),
            new BinaryOperatorTestCase("<<", "short", "byte", "int"),
            new BinaryOperatorTestCase("<<", "short", "short", "int"),
            new BinaryOperatorTestCase("<<", "short", "ushort", "int"),
            new BinaryOperatorTestCase("<<", "short", "int", "int"),
            new BinaryOperatorTestCase("<<", "short", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "short", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "short", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "short", "char", "int"),
            new BinaryOperatorTestCase("<<", "short", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "short", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "short", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ushort", "sbyte", "int"),
            new BinaryOperatorTestCase("<<", "ushort", "byte", "int"),
            new BinaryOperatorTestCase("<<", "ushort", "short", "int"),
            new BinaryOperatorTestCase("<<", "ushort", "ushort", "int"),
            new BinaryOperatorTestCase("<<", "ushort", "int", "int"),
            new BinaryOperatorTestCase("<<", "ushort", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ushort", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ushort", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ushort", "char", "int"),
            new BinaryOperatorTestCase("<<", "ushort", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ushort", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ushort", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "int", "sbyte", "int"),
            new BinaryOperatorTestCase("<<", "int", "byte", "int"),
            new BinaryOperatorTestCase("<<", "int", "short", "int"),
            new BinaryOperatorTestCase("<<", "int", "ushort", "int"),
            new BinaryOperatorTestCase("<<", "int", "int", "int"),
            new BinaryOperatorTestCase("<<", "int", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "int", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "int", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "int", "char", "int"),
            new BinaryOperatorTestCase("<<", "int", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "int", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "int", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "uint", "sbyte", "uint"),
            new BinaryOperatorTestCase("<<", "uint", "byte", "uint"),
            new BinaryOperatorTestCase("<<", "uint", "short", "uint"),
            new BinaryOperatorTestCase("<<", "uint", "ushort", "uint"),
            new BinaryOperatorTestCase("<<", "uint", "int", "uint"),
            new BinaryOperatorTestCase("<<", "uint", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "uint", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "uint", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "uint", "char", "uint"),
            new BinaryOperatorTestCase("<<", "uint", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "uint", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "uint", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "long", "sbyte", "long"),
            new BinaryOperatorTestCase("<<", "long", "byte", "long"),
            new BinaryOperatorTestCase("<<", "long", "short", "long"),
            new BinaryOperatorTestCase("<<", "long", "ushort", "long"),
            new BinaryOperatorTestCase("<<", "long", "int", "long"),
            new BinaryOperatorTestCase("<<", "long", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "long", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "long", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "long", "char", "long"),
            new BinaryOperatorTestCase("<<", "long", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "long", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "long", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ulong", "sbyte", "ulong"),
            new BinaryOperatorTestCase("<<", "ulong", "byte", "ulong"),
            new BinaryOperatorTestCase("<<", "ulong", "short", "ulong"),
            new BinaryOperatorTestCase("<<", "ulong", "ushort", "ulong"),
            new BinaryOperatorTestCase("<<", "ulong", "int", "ulong"),
            new BinaryOperatorTestCase("<<", "ulong", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ulong", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ulong", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ulong", "char", "ulong"),
            new BinaryOperatorTestCase("<<", "ulong", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ulong", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ulong", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "char", "sbyte", "int"),
            new BinaryOperatorTestCase("<<", "char", "byte", "int"),
            new BinaryOperatorTestCase("<<", "char", "short", "int"),
            new BinaryOperatorTestCase("<<", "char", "ushort", "int"),
            new BinaryOperatorTestCase("<<", "char", "int", "int"),
            new BinaryOperatorTestCase("<<", "char", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "char", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "char", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "char", "char", "int"),
            new BinaryOperatorTestCase("<<", "char", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "char", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "char", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("<<", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "sbyte", "sbyte", "int"),
            new BinaryOperatorTestCase(">>", "sbyte", "byte", "int"),
            new BinaryOperatorTestCase(">>", "sbyte", "short", "int"),
            new BinaryOperatorTestCase(">>", "sbyte", "ushort", "int"),
            new BinaryOperatorTestCase(">>", "sbyte", "int", "int"),
            new BinaryOperatorTestCase(">>", "sbyte", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "sbyte", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "sbyte", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "sbyte", "char", "int"),
            new BinaryOperatorTestCase(">>", "sbyte", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "sbyte", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "sbyte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "byte", "sbyte", "int"),
            new BinaryOperatorTestCase(">>", "byte", "byte", "int"),
            new BinaryOperatorTestCase(">>", "byte", "short", "int"),
            new BinaryOperatorTestCase(">>", "byte", "ushort", "int"),
            new BinaryOperatorTestCase(">>", "byte", "int", "int"),
            new BinaryOperatorTestCase(">>", "byte", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "byte", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "byte", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "byte", "char", "int"),
            new BinaryOperatorTestCase(">>", "byte", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "byte", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "byte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "short", "sbyte", "int"),
            new BinaryOperatorTestCase(">>", "short", "byte", "int"),
            new BinaryOperatorTestCase(">>", "short", "short", "int"),
            new BinaryOperatorTestCase(">>", "short", "ushort", "int"),
            new BinaryOperatorTestCase(">>", "short", "int", "int"),
            new BinaryOperatorTestCase(">>", "short", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "short", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "short", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "short", "char", "int"),
            new BinaryOperatorTestCase(">>", "short", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "short", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "short", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ushort", "sbyte", "int"),
            new BinaryOperatorTestCase(">>", "ushort", "byte", "int"),
            new BinaryOperatorTestCase(">>", "ushort", "short", "int"),
            new BinaryOperatorTestCase(">>", "ushort", "ushort", "int"),
            new BinaryOperatorTestCase(">>", "ushort", "int", "int"),
            new BinaryOperatorTestCase(">>", "ushort", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ushort", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ushort", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ushort", "char", "int"),
            new BinaryOperatorTestCase(">>", "ushort", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ushort", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ushort", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "int", "sbyte", "int"),
            new BinaryOperatorTestCase(">>", "int", "byte", "int"),
            new BinaryOperatorTestCase(">>", "int", "short", "int"),
            new BinaryOperatorTestCase(">>", "int", "ushort", "int"),
            new BinaryOperatorTestCase(">>", "int", "int", "int"),
            new BinaryOperatorTestCase(">>", "int", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "int", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "int", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "int", "char", "int"),
            new BinaryOperatorTestCase(">>", "int", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "int", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "int", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "uint", "sbyte", "uint"),
            new BinaryOperatorTestCase(">>", "uint", "byte", "uint"),
            new BinaryOperatorTestCase(">>", "uint", "short", "uint"),
            new BinaryOperatorTestCase(">>", "uint", "ushort", "uint"),
            new BinaryOperatorTestCase(">>", "uint", "int", "uint"),
            new BinaryOperatorTestCase(">>", "uint", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "uint", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "uint", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "uint", "char", "uint"),
            new BinaryOperatorTestCase(">>", "uint", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "uint", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "uint", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "long", "sbyte", "long"),
            new BinaryOperatorTestCase(">>", "long", "byte", "long"),
            new BinaryOperatorTestCase(">>", "long", "short", "long"),
            new BinaryOperatorTestCase(">>", "long", "ushort", "long"),
            new BinaryOperatorTestCase(">>", "long", "int", "long"),
            new BinaryOperatorTestCase(">>", "long", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "long", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "long", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "long", "char", "long"),
            new BinaryOperatorTestCase(">>", "long", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "long", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "long", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ulong", "sbyte", "ulong"),
            new BinaryOperatorTestCase(">>", "ulong", "byte", "ulong"),
            new BinaryOperatorTestCase(">>", "ulong", "short", "ulong"),
            new BinaryOperatorTestCase(">>", "ulong", "ushort", "ulong"),
            new BinaryOperatorTestCase(">>", "ulong", "int", "ulong"),
            new BinaryOperatorTestCase(">>", "ulong", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ulong", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ulong", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ulong", "char", "ulong"),
            new BinaryOperatorTestCase(">>", "ulong", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ulong", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ulong", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "char", "sbyte", "int"),
            new BinaryOperatorTestCase(">>", "char", "byte", "int"),
            new BinaryOperatorTestCase(">>", "char", "short", "int"),
            new BinaryOperatorTestCase(">>", "char", "ushort", "int"),
            new BinaryOperatorTestCase(">>", "char", "int", "int"),
            new BinaryOperatorTestCase(">>", "char", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "char", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "char", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "char", "char", "int"),
            new BinaryOperatorTestCase(">>", "char", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "char", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "char", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase(">>", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "bool", "bool"),
            new BinaryOperatorTestCase("AND", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("AND", "object", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "sbyte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "byte", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "short", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ushort", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "int", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "uint", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "long", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "ulong", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "char", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "float", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "double", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "decimal", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "bool", "bool"),
            new BinaryOperatorTestCase("OR", "bool", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "bool", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "string", "object", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "sbyte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "byte", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "short", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "ushort", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "int", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "uint", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "long", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "ulong", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "char", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "float", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "double", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "decimal", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "bool", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "string", "#inapplicable"),
            new BinaryOperatorTestCase("OR", "object", "object", "#inapplicable")
        };
    }
}